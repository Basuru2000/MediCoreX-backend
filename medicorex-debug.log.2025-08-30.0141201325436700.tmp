2025-08-30 17:15:29.667 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/categories
2025-08-30 17:15:29.667 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/products/low-stock
2025-08-30 17:15:29.668 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/products/expiring?daysAhead=30
2025-08-30 17:15:29.668 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/products?page=0&size=100&sortBy=id&sortDirection=DESC
2025-08-30 17:15:29.668 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/products?page=0&size=1000&sortBy=name&sortDirection=ASC
2025-08-30 17:15:29.667 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/products?page=0&size=100&sortBy=id&sortDirection=DESC
2025-08-30 17:15:29.677 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/categories
2025-08-30 17:15:29.677 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/products/low-stock
2025-08-30 17:15:29.678 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/products?page=0&size=1000&sortBy=name&sortDirection=ASC
2025-08-30 17:15:29.678 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/products/expiring?daysAhead=30
2025-08-30 17:15:29.684 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products/low-stock
2025-08-30 17:15:29.685 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products?page=0&size=100&sortBy=id&sortDirection=DESC
2025-08-30 17:15:29.685 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/categories
2025-08-30 17:15:29.685 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products/expiring?daysAhead=30
2025-08-30 17:15:29.686 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products?page=0&size=1000&sortBy=name&sortDirection=ASC
2025-08-30 17:15:29.686 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:15:29.687 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:15:29.687 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:15:29.687 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:15:29.687 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:15:29.691 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products?page=0&size=100&sortBy=id&sortDirection=DESC
2025-08-30 17:15:29.691 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products/low-stock
2025-08-30 17:15:29.692 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/categories
2025-08-30 17:15:29.692 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products/expiring?daysAhead=30
2025-08-30 17:15:29.692 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getLowStockProducts(); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:29.692 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products?page=0&size=1000&sortBy=name&sortDirection=ASC
2025-08-30 17:15:29.692 [http-nio-8080-exec-6] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.CategoryController.getAllCategories(); target is of class [com.medicorex.controller.CategoryController]
2025-08-30 17:15:29.692 [http-nio-8080-exec-10] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:29.692 [http-nio-8080-exec-10] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:29.692 [http-nio-8080-exec-1] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getExpiringProducts(int); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:29.692 [http-nio-8080-exec-6] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.CategoryController.getAllCategories(); target is of class [com.medicorex.controller.CategoryController]
2025-08-30 17:15:29.693 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getLowStockProducts(); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:29.693 [http-nio-8080-exec-1] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getExpiringProducts(int); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:29.693 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:29.693 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:29.693 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0
2025-08-30 17:15:29.693 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 17:15:29.693 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 17:15:29.694 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.694 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.694 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.name 
    limit
        ?, ?
2025-08-30 17:15:29.694 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 17:15:29.694 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.id desc 
    limit
        ?, ?
2025-08-30 17:15:29.695 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.695 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.695 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.695 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.695 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.695 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.695 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.696 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.696 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.696 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.696 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.696 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.696 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.696 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 17:15:29.696 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.697 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.697 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.697 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 17:15:29.698 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.699 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.699 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 17:15:29.700 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 17:15:29.701 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products/expiring?daysAhead=30
2025-08-30 17:15:29.701 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products/low-stock
2025-08-30 17:15:29.701 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 17:15:29.702 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 17:15:29.705 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:15:29.706 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 17:15:29.709 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products/low-stock
2025-08-30 17:15:29.710 [http-nio-8080-exec-4] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getLowStockProducts(); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:29.710 [http-nio-8080-exec-4] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getLowStockProducts(); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:29.711 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 17:15:29.711 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.712 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.712 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.714 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.715 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.718 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:15:29.722 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products/expiring?daysAhead=30
2025-08-30 17:15:29.723 [http-nio-8080-exec-3] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getExpiringProducts(int); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:29.723 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products?page=0&size=1000&sortBy=name&sortDirection=ASC
2025-08-30 17:15:29.723 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products?page=0&size=100&sortBy=id&sortDirection=DESC
2025-08-30 17:15:29.723 [http-nio-8080-exec-3] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getExpiringProducts(int); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:29.723 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/categories
2025-08-30 17:15:29.724 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 17:15:29.724 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.725 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:15:29.725 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:15:29.725 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:15:29.725 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.725 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.726 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.726 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.728 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/categories
2025-08-30 17:15:29.728 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products?page=0&size=100&sortBy=id&sortDirection=DESC
2025-08-30 17:15:29.728 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products?page=0&size=1000&sortBy=name&sortDirection=ASC
2025-08-30 17:15:29.728 [http-nio-8080-exec-8] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:29.728 [http-nio-8080-exec-8] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:29.728 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.CategoryController.getAllCategories(); target is of class [com.medicorex.controller.CategoryController]
2025-08-30 17:15:29.729 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.CategoryController.getAllCategories(); target is of class [com.medicorex.controller.CategoryController]
2025-08-30 17:15:29.729 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:29.729 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:29.730 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0
2025-08-30 17:15:29.730 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.id desc 
    limit
        ?, ?
2025-08-30 17:15:29.730 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.name 
    limit
        ?, ?
2025-08-30 17:15:29.731 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.731 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.732 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 17:15:29.732 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.732 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.732 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.732 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 17:15:29.732 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.733 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 17:15:29.733 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.734 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.734 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 17:15:29.734 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.734 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:29.734 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 17:15:29.734 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 17:15:29.736 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 17:15:29.737 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 17:15:30.035 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products?page=0&size=1000&sortBy=name&sortDirection=ASC
2025-08-30 17:15:30.035 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products?page=0&size=100&sortBy=id&sortDirection=DESC
2025-08-30 17:15:30.035 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products/expiring?daysAhead=30
2025-08-30 17:15:30.035 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products/low-stock
2025-08-30 17:15:30.037 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:15:30.037 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:15:30.037 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:15:30.037 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:15:30.041 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products?page=0&size=1000&sortBy=name&sortDirection=ASC
2025-08-30 17:15:30.041 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products?page=0&size=100&sortBy=id&sortDirection=DESC
2025-08-30 17:15:30.041 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products/low-stock
2025-08-30 17:15:30.042 [http-nio-8080-exec-10] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:30.042 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products/expiring?daysAhead=30
2025-08-30 17:15:30.042 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getLowStockProducts(); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:30.042 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getLowStockProducts(); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:30.042 [http-nio-8080-exec-10] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:30.042 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getExpiringProducts(int); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:30.042 [http-nio-8080-exec-1] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:30.042 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getExpiringProducts(int); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:30.042 [http-nio-8080-exec-1] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 17:15:30.043 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 17:15:30.043 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.name 
    limit
        ?, ?
2025-08-30 17:15:30.043 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 17:15:30.043 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.id desc 
    limit
        ?, ?
2025-08-30 17:15:30.043 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:30.043 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:30.043 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:30.044 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:30.044 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:30.044 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:30.044 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:30.044 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:30.044 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:30.044 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:30.044 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:30.044 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:30.045 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:30.045 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:30.045 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:30.045 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:30.045 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:30.045 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:30.045 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:30.045 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 17:15:54.315 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/stock/adjust
2025-08-30 17:15:54.318 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /api/stock/adjust
2025-08-30 17:15:54.321 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:15:54.324 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /api/stock/adjust
2025-08-30 17:15:54.332 [http-nio-8080-exec-4] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.StockController.adjustStock(com.medicorex.dto.StockAdjustmentDTO); target is of class [com.medicorex.controller.StockController]
2025-08-30 17:15:54.332 [http-nio-8080-exec-4] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.StockController.adjustStock(com.medicorex.dto.StockAdjustmentDTO); target is of class [com.medicorex.controller.StockController]
2025-08-30 17:15:54.334 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 17:15:54.338 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:15:54.343 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        stock_transactions
        (after_quantity, balance_after, before_quantity, created_at, notes, performed_by, product_id, quantity, reason, reference, transaction_date, transaction_type, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-30 17:15:54.351 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:15:54.351 [http-nio-8080-exec-4] INFO  com.medicorex.service.StockService - Stock adjusted for product: Simvastatin 20mg by user ID: 60
2025-08-30 17:15:54.352 [Async-1] DEBUG com.medicorex.service.NotificationService - Sending notifications to roles: [HOSPITAL_MANAGER, PHARMACY_STAFF] with template: STOCK_ADJUSTED
2025-08-30 17:15:54.354 [Async-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role in (?, ?)
2025-08-30 17:15:54.355 [Async-1] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id,
        nt1_0.active,
        nt1_0.category,
        nt1_0.code,
        nt1_0.created_at,
        nt1_0.message_template,
        nt1_0.priority,
        nt1_0.title_template,
        nt1_0.updated_at 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
        and nt1_0.active=?
2025-08-30 17:15:54.356 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        products 
    set
        barcode=?,
        batch_number=?,
        category_id=?,
        code=?,
        description=?,
        expiry_date=?,
        image_url=?,
        last_stock_check=?,
        last_updated=?,
        manufacturer=?,
        max_stock=?,
        min_stock=?,
        min_stock_level=?,
        name=?,
        qr_code=?,
        quantity=?,
        unit=?,
        unit_price=?,
        updated_at=? 
    where
        id=?
2025-08-30 17:15:54.358 [Async-1] DEBUG org.hibernate.SQL - 
    select
        np1_0.id,
        np1_0.category_preferences,
        np1_0.created_at,
        np1_0.created_by,
        np1_0.desktop_notifications,
        np1_0.digest_enabled,
        np1_0.digest_time,
        np1_0.email_enabled,
        np1_0.escalation_contact,
        np1_0.escalation_enabled,
        np1_0.frequency_settings,
        np1_0.in_app_enabled,
        np1_0.last_digest_sent,
        np1_0.priority_threshold,
        np1_0.quiet_hours,
        np1_0.sms_enabled,
        np1_0.sound_enabled,
        np1_0.updated_at,
        np1_0.updated_by,
        np1_0.user_id 
    from
        notification_preferences np1_0 
    where
        np1_0.user_id=?
2025-08-30 17:15:54.365 [Async-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        notifications
        (action_data, action_url, category, created_at, expires_at, message, preference_checked, priority, read_at, status, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-30 17:15:54.367 [Async-1] DEBUG com.medicorex.service.NotificationService - Notification created for user: admin
2025-08-30 17:15:54.368 [Async-1] DEBUG org.hibernate.SQL - 
    select
        np1_0.id,
        np1_0.category_preferences,
        np1_0.created_at,
        np1_0.created_by,
        np1_0.desktop_notifications,
        np1_0.digest_enabled,
        np1_0.digest_time,
        np1_0.email_enabled,
        np1_0.escalation_contact,
        np1_0.escalation_enabled,
        np1_0.frequency_settings,
        np1_0.in_app_enabled,
        np1_0.last_digest_sent,
        np1_0.priority_threshold,
        np1_0.quiet_hours,
        np1_0.sms_enabled,
        np1_0.sound_enabled,
        np1_0.updated_at,
        np1_0.updated_by,
        np1_0.user_id 
    from
        notification_preferences np1_0 
    where
        np1_0.user_id=?
2025-08-30 17:15:54.369 [Async-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        notifications
        (action_data, action_url, category, created_at, expires_at, message, preference_checked, priority, read_at, status, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-30 17:15:54.371 [Async-1] DEBUG com.medicorex.service.NotificationService - Notification created for user: staff
2025-08-30 17:15:54.372 [Async-1] DEBUG org.hibernate.SQL - 
    select
        np1_0.id,
        np1_0.category_preferences,
        np1_0.created_at,
        np1_0.created_by,
        np1_0.desktop_notifications,
        np1_0.digest_enabled,
        np1_0.digest_time,
        np1_0.email_enabled,
        np1_0.escalation_contact,
        np1_0.escalation_enabled,
        np1_0.frequency_settings,
        np1_0.in_app_enabled,
        np1_0.last_digest_sent,
        np1_0.priority_threshold,
        np1_0.quiet_hours,
        np1_0.sms_enabled,
        np1_0.sound_enabled,
        np1_0.updated_at,
        np1_0.updated_by,
        np1_0.user_id 
    from
        notification_preferences np1_0 
    where
        np1_0.user_id=?
2025-08-30 17:15:54.374 [Async-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        notifications
        (action_data, action_url, category, created_at, expires_at, message, preference_checked, priority, read_at, status, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-30 17:15:54.375 [Async-1] DEBUG com.medicorex.service.NotificationService - Notification created for user: test1
2025-08-30 17:15:54.375 [Async-1] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 17:15:54.377 [Async-1] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 17:15:54.378 [Async-1] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 17:15:54.598 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 17:15:54.600 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 17:15:54.601 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:15:54.604 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 17:15:54.605 [http-nio-8080-exec-8] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 17:15:54.605 [http-nio-8080-exec-8] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 17:15:54.605 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:15:54.608 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 17:15:55.899 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications?status=UNREAD&page=0&size=10
2025-08-30 17:15:55.900 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications?status=UNREAD&page=0&size=10
2025-08-30 17:15:55.902 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:15:55.905 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications?status=UNREAD&page=0&size=10
2025-08-30 17:15:55.909 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getMyNotifications(com.medicorex.entity.Notification$NotificationStatus,com.medicorex.entity.Notification$NotificationCategory,com.medicorex.entity.Notification$NotificationPriority,int,int,org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 17:15:55.909 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getMyNotifications(com.medicorex.entity.Notification$NotificationStatus,com.medicorex.entity.Notification$NotificationCategory,com.medicorex.entity.Notification$NotificationPriority,int,int,org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 17:15:55.910 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:15:55.915 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        n1_0.id,
        n1_0.action_data,
        n1_0.action_url,
        n1_0.category,
        n1_0.created_at,
        n1_0.expires_at,
        n1_0.message,
        n1_0.preference_checked,
        n1_0.priority,
        n1_0.read_at,
        n1_0.status,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and (
            ? is null 
            or n1_0.status=?
        ) 
        and (
            ? is null 
            or n1_0.category=?
        ) 
        and (
            ? is null 
            or n1_0.priority=?
        ) 
    order by
        n1_0.created_at desc 
    limit
        ?, ?
2025-08-30 17:15:55.918 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and (
            ? is null 
            or n1_0.status=?
        ) 
        and (
            ? is null 
            or n1_0.category=?
        ) 
        and (
            ? is null 
            or n1_0.priority=?
        )
2025-08-30 17:16:24.967 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 17:16:24.970 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 17:16:24.974 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:16:24.980 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 17:16:24.980 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 17:16:24.981 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 17:16:24.981 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:16:24.983 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 17:16:54.966 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 17:16:54.969 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 17:16:54.973 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:16:54.981 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 17:16:54.981 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 17:16:54.982 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 17:16:54.982 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:16:54.985 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 17:17:24.960 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 17:17:24.962 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 17:17:24.964 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:17:24.967 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 17:17:24.967 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 17:17:24.967 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 17:17:24.968 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 17:17:24.970 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 17:17:52.317 [http-nio-8080-exec-1] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - WebSocket disconnected - User: admin, Session: 052ehmm0, Duration: 144 seconds
2025-08-30 17:17:52.317 [http-nio-8080-exec-10] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - WebSocket disconnected - User: admin, Session: yxuynbmp, Duration: 147 seconds
2025-08-30 17:17:52.318 [http-nio-8080-exec-1] INFO  com.medicorex.websocket.service.WebSocketNotificationService - User disconnected from WebSocket: admin
2025-08-30 17:17:52.318 [http-nio-8080-exec-10] INFO  com.medicorex.websocket.service.WebSocketNotificationService - User disconnected from WebSocket: admin
2025-08-30 17:17:52.318 [http-nio-8080-exec-1] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - User admin has no more active WebSocket sessions
2025-08-30 17:17:52.318 [http-nio-8080-exec-10] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - User admin has no more active WebSocket sessions
2025-08-30 17:17:52.318 [http-nio-8080-exec-10] INFO  com.medicorex.config.WebSocketConfig - WebSocket disconnected for user: UsernamePasswordAuthenticationToken [Principal=com.medicorex.security.CustomUserDetails@2725947b, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_HOSPITAL_MANAGER]]
2025-08-30 17:17:52.318 [http-nio-8080-exec-1] INFO  com.medicorex.config.WebSocketConfig - WebSocket disconnected for user: UsernamePasswordAuthenticationToken [Principal=com.medicorex.security.CustomUserDetails@5cbb112d, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_HOSPITAL_MANAGER]]
2025-08-30 17:22:36.516 [MessageBroker-8] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 72 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(72)-CONNECTED(72)-DISCONNECT(64)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3072], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 270], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 429]
2025-08-30 17:52:36.531 [MessageBroker-8] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 72 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(72)-CONNECTED(72)-DISCONNECT(64)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3072], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 270], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 790]
2025-08-30 18:00:00.006 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        n1_0.id,
        n1_0.action_data,
        n1_0.action_url,
        n1_0.category,
        n1_0.created_at,
        n1_0.expires_at,
        n1_0.message,
        n1_0.preference_checked,
        n1_0.priority,
        n1_0.read_at,
        n1_0.status,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    where
        n1_0.created_at<? 
        and n1_0.priority=? 
        and n1_0.status=?
2025-08-30 18:00:00.016 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.017 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-30 18:00:00.018 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
    limit
        ?
2025-08-30 18:00:00.020 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id,
        nt1_0.active,
        nt1_0.category,
        nt1_0.code,
        nt1_0.created_at,
        nt1_0.message_template,
        nt1_0.priority,
        nt1_0.title_template,
        nt1_0.updated_at 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
        and nt1_0.active=?
2025-08-30 18:00:00.021 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        notifications
        (action_data, action_url, category, created_at, expires_at, message, preference_checked, priority, read_at, status, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-30 18:00:00.025 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.025 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:00:00.027 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        unread_notifications=? 
    where
        id=?
2025-08-30 18:00:00.028 [ExpiryMonitor-4] INFO  com.medicorex.service.NotificationService - Created notification for user 60 from template ESCALATION_NOTICE
2025-08-30 18:00:00.028 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.029 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-30 18:00:00.030 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
    limit
        ?
2025-08-30 18:00:00.031 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id,
        nt1_0.active,
        nt1_0.category,
        nt1_0.code,
        nt1_0.created_at,
        nt1_0.message_template,
        nt1_0.priority,
        nt1_0.title_template,
        nt1_0.updated_at 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
        and nt1_0.active=?
2025-08-30 18:00:00.031 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        notifications
        (action_data, action_url, category, created_at, expires_at, message, preference_checked, priority, read_at, status, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-30 18:00:00.034 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.035 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.036 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:00:00.039 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        unread_notifications=? 
    where
        id=?
2025-08-30 18:00:00.039 [ExpiryMonitor-4] INFO  com.medicorex.service.NotificationService - Created notification for user 60 from template ESCALATION_NOTICE
2025-08-30 18:00:00.040 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.042 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
    limit
        ?
2025-08-30 18:00:00.043 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id,
        nt1_0.active,
        nt1_0.category,
        nt1_0.code,
        nt1_0.created_at,
        nt1_0.message_template,
        nt1_0.priority,
        nt1_0.title_template,
        nt1_0.updated_at 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
        and nt1_0.active=?
2025-08-30 18:00:00.044 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        notifications
        (action_data, action_url, category, created_at, expires_at, message, preference_checked, priority, read_at, status, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-30 18:00:00.047 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.047 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.048 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.048 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:00:00.049 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        unread_notifications=? 
    where
        id=?
2025-08-30 18:00:00.049 [ExpiryMonitor-4] INFO  com.medicorex.service.NotificationService - Created notification for user 60 from template ESCALATION_NOTICE
2025-08-30 18:00:00.050 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.051 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
    limit
        ?
2025-08-30 18:00:00.053 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id,
        nt1_0.active,
        nt1_0.category,
        nt1_0.code,
        nt1_0.created_at,
        nt1_0.message_template,
        nt1_0.priority,
        nt1_0.title_template,
        nt1_0.updated_at 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
        and nt1_0.active=?
2025-08-30 18:00:00.054 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        notifications
        (action_data, action_url, category, created_at, expires_at, message, preference_checked, priority, read_at, status, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-30 18:00:00.058 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.059 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.060 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.060 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.060 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:00:00.063 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        unread_notifications=? 
    where
        id=?
2025-08-30 18:00:00.063 [ExpiryMonitor-4] INFO  com.medicorex.service.NotificationService - Created notification for user 60 from template ESCALATION_NOTICE
2025-08-30 18:00:00.064 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.065 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.066 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
    limit
        ?
2025-08-30 18:00:00.068 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id,
        nt1_0.active,
        nt1_0.category,
        nt1_0.code,
        nt1_0.created_at,
        nt1_0.message_template,
        nt1_0.priority,
        nt1_0.title_template,
        nt1_0.updated_at 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
        and nt1_0.active=?
2025-08-30 18:00:00.069 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        notifications
        (action_data, action_url, category, created_at, expires_at, message, preference_checked, priority, read_at, status, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-30 18:00:00.073 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.074 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.075 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.075 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.076 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.076 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:00:00.078 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        unread_notifications=? 
    where
        id=?
2025-08-30 18:00:00.079 [ExpiryMonitor-4] INFO  com.medicorex.service.NotificationService - Created notification for user 60 from template ESCALATION_NOTICE
2025-08-30 18:00:00.080 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.081 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
    limit
        ?
2025-08-30 18:00:00.082 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id,
        nt1_0.active,
        nt1_0.category,
        nt1_0.code,
        nt1_0.created_at,
        nt1_0.message_template,
        nt1_0.priority,
        nt1_0.title_template,
        nt1_0.updated_at 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
        and nt1_0.active=?
2025-08-30 18:00:00.083 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        notifications
        (action_data, action_url, category, created_at, expires_at, message, preference_checked, priority, read_at, status, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-30 18:00:00.087 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.088 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.089 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.090 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.090 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.091 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.092 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:00:00.094 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        unread_notifications=? 
    where
        id=?
2025-08-30 18:00:00.094 [ExpiryMonitor-4] INFO  com.medicorex.service.NotificationService - Created notification for user 60 from template ESCALATION_NOTICE
2025-08-30 18:00:00.095 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.096 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.097 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.099 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.099 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.101 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.102 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.103 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.104 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.105 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.106 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.107 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.109 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.110 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.111 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.112 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.114 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.115 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.115 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.117 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.118 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.119 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.120 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.121 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.122 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.123 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.124 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.125 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.126 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.128 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.129 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.130 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.131 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.133 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.134 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.135 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.136 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.137 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.138 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.139 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.141 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.142 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.143 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.144 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.145 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.146 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.147 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.148 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.149 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.151 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.152 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.153 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.154 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.155 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.156 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.157 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.158 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.159 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.160 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.162 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.163 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.164 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.165 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.166 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.167 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.168 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.169 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.170 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.171 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.172 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.173 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.174 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.175 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.176 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.178 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.179 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.180 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.181 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.182 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.182 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.184 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.186 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.188 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.189 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.190 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.191 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.192 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.193 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.194 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.195 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.196 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.197 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.198 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.199 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.200 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.202 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.203 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.204 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.205 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.206 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.207 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.207 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.208 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.210 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.211 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.212 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.213 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.214 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.215 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.216 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.217 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.218 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.219 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.220 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.221 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.222 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.223 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.224 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.225 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.226 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.227 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.228 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.229 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.230 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.231 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.232 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.234 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.235 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.236 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.237 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.238 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.239 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.240 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.241 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.242 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.243 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.245 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.246 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.247 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.248 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.249 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.250 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.251 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.252 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.253 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.254 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.255 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.256 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.257 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.258 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.259 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.259 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.260 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.261 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.262 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.263 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.264 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
    limit
        ?
2025-08-30 18:00:00.265 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id,
        nt1_0.active,
        nt1_0.category,
        nt1_0.code,
        nt1_0.created_at,
        nt1_0.message_template,
        nt1_0.priority,
        nt1_0.title_template,
        nt1_0.updated_at 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
        and nt1_0.active=?
2025-08-30 18:00:00.266 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        notifications
        (action_data, action_url, category, created_at, expires_at, message, preference_checked, priority, read_at, status, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-30 18:00:00.270 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.271 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.271 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.272 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.272 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.273 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.273 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.274 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:00:00.276 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        unread_notifications=? 
    where
        id=?
2025-08-30 18:00:00.276 [ExpiryMonitor-4] INFO  com.medicorex.service.NotificationService - Created notification for user 60 from template ESCALATION_NOTICE
2025-08-30 18:00:00.277 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.278 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
    limit
        ?
2025-08-30 18:00:00.279 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id,
        nt1_0.active,
        nt1_0.category,
        nt1_0.code,
        nt1_0.created_at,
        nt1_0.message_template,
        nt1_0.priority,
        nt1_0.title_template,
        nt1_0.updated_at 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
        and nt1_0.active=?
2025-08-30 18:00:00.280 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        notifications
        (action_data, action_url, category, created_at, expires_at, message, preference_checked, priority, read_at, status, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-30 18:00:00.284 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.284 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.285 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.285 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.286 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.286 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.286 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.287 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.287 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:00:00.289 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        unread_notifications=? 
    where
        id=?
2025-08-30 18:00:00.290 [ExpiryMonitor-4] INFO  com.medicorex.service.NotificationService - Created notification for user 60 from template ESCALATION_NOTICE
2025-08-30 18:00:00.291 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.292 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.293 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.294 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.295 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.296 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.297 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.298 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.299 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.300 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.301 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.302 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.304 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.305 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.306 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.307 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.308 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.309 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.310 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.310 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.311 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.312 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.313 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.314 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.315 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.316 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.316 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.317 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.318 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.320 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.322 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.324 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.325 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.326 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.327 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.328 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.329 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.330 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.331 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.332 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.333 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.334 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.334 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.335 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.336 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
    limit
        ?
2025-08-30 18:00:00.338 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id,
        nt1_0.active,
        nt1_0.category,
        nt1_0.code,
        nt1_0.created_at,
        nt1_0.message_template,
        nt1_0.priority,
        nt1_0.title_template,
        nt1_0.updated_at 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
        and nt1_0.active=?
2025-08-30 18:00:00.339 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        notifications
        (action_data, action_url, category, created_at, expires_at, message, preference_checked, priority, read_at, status, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-30 18:00:00.342 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.343 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.343 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.344 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.344 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.345 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.345 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.346 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.346 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.346 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:00:00.348 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        unread_notifications=? 
    where
        id=?
2025-08-30 18:00:00.349 [ExpiryMonitor-4] INFO  com.medicorex.service.NotificationService - Created notification for user 60 from template ESCALATION_NOTICE
2025-08-30 18:00:00.350 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.351 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
    limit
        ?
2025-08-30 18:00:00.353 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id,
        nt1_0.active,
        nt1_0.category,
        nt1_0.code,
        nt1_0.created_at,
        nt1_0.message_template,
        nt1_0.priority,
        nt1_0.title_template,
        nt1_0.updated_at 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
        and nt1_0.active=?
2025-08-30 18:00:00.354 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        notifications
        (action_data, action_url, category, created_at, expires_at, message, preference_checked, priority, read_at, status, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-30 18:00:00.356 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.357 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.357 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.358 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.358 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.359 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.359 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.359 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.360 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.360 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.361 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:00:00.362 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        unread_notifications=? 
    where
        id=?
2025-08-30 18:00:00.363 [ExpiryMonitor-4] INFO  com.medicorex.service.NotificationService - Created notification for user 60 from template ESCALATION_NOTICE
2025-08-30 18:00:00.363 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.364 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.365 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.366 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.367 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.368 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.370 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.371 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.372 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.373 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.374 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
    limit
        ?
2025-08-30 18:00:00.375 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id,
        nt1_0.active,
        nt1_0.category,
        nt1_0.code,
        nt1_0.created_at,
        nt1_0.message_template,
        nt1_0.priority,
        nt1_0.title_template,
        nt1_0.updated_at 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
        and nt1_0.active=?
2025-08-30 18:00:00.376 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        notifications
        (action_data, action_url, category, created_at, expires_at, message, preference_checked, priority, read_at, status, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-30 18:00:00.380 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.380 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.381 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.382 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.383 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.384 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.385 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.385 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.386 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.387 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.387 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.388 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:00:00.390 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        unread_notifications=? 
    where
        id=?
2025-08-30 18:00:00.390 [ExpiryMonitor-4] INFO  com.medicorex.service.NotificationService - Created notification for user 60 from template ESCALATION_NOTICE
2025-08-30 18:00:00.391 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.393 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
    limit
        ?
2025-08-30 18:00:00.394 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id,
        nt1_0.active,
        nt1_0.category,
        nt1_0.code,
        nt1_0.created_at,
        nt1_0.message_template,
        nt1_0.priority,
        nt1_0.title_template,
        nt1_0.updated_at 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
        and nt1_0.active=?
2025-08-30 18:00:00.394 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        notifications
        (action_data, action_url, category, created_at, expires_at, message, preference_checked, priority, read_at, status, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-30 18:00:00.398 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.399 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.399 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.400 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.400 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.401 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.401 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.402 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.402 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.403 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.404 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.404 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.405 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:00:00.407 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        unread_notifications=? 
    where
        id=?
2025-08-30 18:00:00.407 [ExpiryMonitor-4] INFO  com.medicorex.service.NotificationService - Created notification for user 60 from template ESCALATION_NOTICE
2025-08-30 18:00:00.408 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.409 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.410 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
    limit
        ?
2025-08-30 18:00:00.412 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id,
        nt1_0.active,
        nt1_0.category,
        nt1_0.code,
        nt1_0.created_at,
        nt1_0.message_template,
        nt1_0.priority,
        nt1_0.title_template,
        nt1_0.updated_at 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
        and nt1_0.active=?
2025-08-30 18:00:00.413 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        notifications
        (action_data, action_url, category, created_at, expires_at, message, preference_checked, priority, read_at, status, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-30 18:00:00.417 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.418 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.419 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.420 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.420 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.421 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.421 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.422 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.422 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.423 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.423 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.424 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.424 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.425 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:00:00.427 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        unread_notifications=? 
    where
        id=?
2025-08-30 18:00:00.427 [ExpiryMonitor-4] INFO  com.medicorex.service.NotificationService - Created notification for user 60 from template ESCALATION_NOTICE
2025-08-30 18:00:00.429 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.430 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
    limit
        ?
2025-08-30 18:00:00.431 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        nt1_0.id,
        nt1_0.active,
        nt1_0.category,
        nt1_0.code,
        nt1_0.created_at,
        nt1_0.message_template,
        nt1_0.priority,
        nt1_0.title_template,
        nt1_0.updated_at 
    from
        notification_templates nt1_0 
    where
        nt1_0.code=? 
        and nt1_0.active=?
2025-08-30 18:00:00.432 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        notifications
        (action_data, action_url, category, created_at, expires_at, message, preference_checked, priority, read_at, status, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-30 18:00:00.436 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.436 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.437 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.437 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.438 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.439 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.439 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.439 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.440 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.440 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.441 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.441 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.442 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.442 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.443 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:00:00.445 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        unread_notifications=? 
    where
        id=?
2025-08-30 18:00:00.445 [ExpiryMonitor-4] INFO  com.medicorex.service.NotificationService - Created notification for user 60 from template ESCALATION_NOTICE
2025-08-30 18:00:00.446 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.448 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.449 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.451 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.452 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.453 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.454 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.455 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.role=?
2025-08-30 18:00:00.456 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.457 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.458 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.458 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.459 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.459 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.460 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.460 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.461 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.461 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.462 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.462 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.463 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:00.463 [ExpiryMonitor-4] DEBUG org.hibernate.SQL - 
    update
        notifications 
    set
        action_data=?,
        action_url=?,
        category=?,
        expires_at=?,
        message=?,
        preference_checked=?,
        priority=?,
        read_at=?,
        status=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-08-30 18:00:43.005 [ExpiryMonitor-4] WARN  com.medicorex.scheduler.NotificationScheduler - Escalated 14 critical notifications
2025-08-30 18:21:59.222 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /
2025-08-30 18:21:59.224 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-30 18:21:59.227 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /
2025-08-30 18:21:59.420 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /favicon.ico
2025-08-30 18:21:59.420 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-30 18:22:02.914 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /ws/info?t=1756558322912
2025-08-30 18:22:02.915 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-30 18:22:02.918 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /ws/info?t=1756558322912
2025-08-30 18:22:02.932 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /ws/349/wdmrsmxy/websocket
2025-08-30 18:22:02.932 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-30 18:22:02.933 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /ws/349/wdmrsmxy/websocket
2025-08-30 18:22:02.947 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:02.952 [http-nio-8080-exec-5] INFO  com.medicorex.config.WebSocketConfig - WebSocket authenticated for user: admin
2025-08-30 18:22:02.953 [http-nio-8080-exec-5] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - WebSocket connection request from user: admin with session: wdmrsmxy
2025-08-30 18:22:02.953 [clientOutboundChannel-90] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - WebSocket connected successfully - User: admin, Session: wdmrsmxy
2025-08-30 18:22:02.953 [clientOutboundChannel-90] INFO  com.medicorex.websocket.service.WebSocketNotificationService - User connected via WebSocket: admin
2025-08-30 18:22:02.958 [http-nio-8080-exec-7] INFO  com.medicorex.config.WebSocketConfig - WebSocket disconnected for user: UsernamePasswordAuthenticationToken [Principal=com.medicorex.security.CustomUserDetails@3d33a783, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_HOSPITAL_MANAGER]]
2025-08-30 18:22:02.962 [http-nio-8080-exec-2] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - WebSocket disconnected - User: admin, Session: wdmrsmxy, Duration: 0 seconds
2025-08-30 18:22:02.962 [http-nio-8080-exec-2] INFO  com.medicorex.websocket.service.WebSocketNotificationService - User disconnected from WebSocket: admin
2025-08-30 18:22:02.962 [http-nio-8080-exec-2] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - User admin has no more active WebSocket sessions
2025-08-30 18:22:02.962 [http-nio-8080-exec-2] INFO  com.medicorex.config.WebSocketConfig - WebSocket disconnected for user: UsernamePasswordAuthenticationToken [Principal=com.medicorex.security.CustomUserDetails@3d33a783, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_HOSPITAL_MANAGER]]
2025-08-30 18:22:05.967 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /ws/info?t=1756558325962
2025-08-30 18:22:05.967 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-30 18:22:05.969 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /ws/info?t=1756558325962
2025-08-30 18:22:05.974 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /ws/779/1yfncy2w/websocket
2025-08-30 18:22:05.974 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-30 18:22:05.976 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /ws/779/1yfncy2w/websocket
2025-08-30 18:22:05.983 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:05.986 [http-nio-8080-exec-6] INFO  com.medicorex.config.WebSocketConfig - WebSocket authenticated for user: admin
2025-08-30 18:22:05.986 [http-nio-8080-exec-6] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - WebSocket connection request from user: admin with session: 1yfncy2w
2025-08-30 18:22:05.987 [clientOutboundChannel-93] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - WebSocket connected successfully - User: admin, Session: 1yfncy2w
2025-08-30 18:22:05.987 [clientOutboundChannel-93] INFO  com.medicorex.websocket.service.WebSocketNotificationService - User connected via WebSocket: admin
2025-08-30 18:22:05.991 [http-nio-8080-exec-8] INFO  com.medicorex.config.WebSocketConfig - WebSocket disconnected for user: UsernamePasswordAuthenticationToken [Principal=com.medicorex.security.CustomUserDetails@41150998, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_HOSPITAL_MANAGER]]
2025-08-30 18:22:05.993 [http-nio-8080-exec-9] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - WebSocket disconnected - User: admin, Session: 1yfncy2w, Duration: 0 seconds
2025-08-30 18:22:05.994 [http-nio-8080-exec-9] INFO  com.medicorex.websocket.service.WebSocketNotificationService - User disconnected from WebSocket: admin
2025-08-30 18:22:05.994 [http-nio-8080-exec-9] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - User admin has no more active WebSocket sessions
2025-08-30 18:22:05.994 [http-nio-8080-exec-9] INFO  com.medicorex.config.WebSocketConfig - WebSocket disconnected for user: UsernamePasswordAuthenticationToken [Principal=com.medicorex.security.CustomUserDetails@41150998, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_HOSPITAL_MANAGER]]
2025-08-30 18:22:08.933 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/auth/login
2025-08-30 18:22:08.936 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-08-30 18:22:08.939 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:08.943 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-08-30 18:22:08.954 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:08.955 [http-nio-8080-exec-7] TRACE org.springframework.security.authentication.ProviderManager - Authenticating request with DaoAuthenticationProvider (1/1)
2025-08-30 18:22:08.957 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:08.998 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /ws/info?t=1756558328996
2025-08-30 18:22:08.999 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-30 18:22:09.000 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /ws/info?t=1756558328996
2025-08-30 18:22:09.005 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /ws/441/ihdimmv0/websocket
2025-08-30 18:22:09.005 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-30 18:22:09.006 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /ws/441/ihdimmv0/websocket
2025-08-30 18:22:09.012 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.016 [http-nio-8080-exec-10] INFO  com.medicorex.config.WebSocketConfig - WebSocket authenticated for user: admin
2025-08-30 18:22:09.017 [http-nio-8080-exec-10] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - WebSocket connection request from user: admin with session: ihdimmv0
2025-08-30 18:22:09.017 [clientOutboundChannel-96] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - WebSocket connected successfully - User: admin, Session: ihdimmv0
2025-08-30 18:22:09.017 [clientOutboundChannel-96] INFO  com.medicorex.websocket.service.WebSocketNotificationService - User connected via WebSocket: admin
2025-08-30 18:22:09.021 [http-nio-8080-exec-4] INFO  com.medicorex.config.WebSocketConfig - WebSocket disconnected for user: UsernamePasswordAuthenticationToken [Principal=com.medicorex.security.CustomUserDetails@6bacd199, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_HOSPITAL_MANAGER]]
2025-08-30 18:22:09.024 [http-nio-8080-exec-3] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - WebSocket disconnected - User: admin, Session: ihdimmv0, Duration: 0 seconds
2025-08-30 18:22:09.024 [http-nio-8080-exec-3] INFO  com.medicorex.websocket.service.WebSocketNotificationService - User disconnected from WebSocket: admin
2025-08-30 18:22:09.024 [http-nio-8080-exec-3] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - User admin has no more active WebSocket sessions
2025-08-30 18:22:09.025 [http-nio-8080-exec-3] INFO  com.medicorex.config.WebSocketConfig - WebSocket disconnected for user: UsernamePasswordAuthenticationToken [Principal=com.medicorex.security.CustomUserDetails@6bacd199, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_HOSPITAL_MANAGER]]
2025-08-30 18:22:09.074 [http-nio-8080-exec-7] DEBUG org.springframework.security.authentication.dao.DaoAuthenticationProvider - Authenticated user
2025-08-30 18:22:09.226 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notification-preferences
2025-08-30 18:22:09.231 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/users
2025-08-30 18:22:09.231 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:22:09.232 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/products?page=0&size=1&sortBy=name&sortDirection=ASC
2025-08-30 18:22:09.235 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/products/low-stock
2025-08-30 18:22:09.235 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/products/expiring?daysAhead=30
2025-08-30 18:22:09.238 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/categories
2025-08-30 18:22:09.239 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:22:09.239 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notification-preferences
2025-08-30 18:22:09.239 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/users
2025-08-30 18:22:09.240 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/products?page=0&size=1&sortBy=name&sortDirection=ASC
2025-08-30 18:22:09.243 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/products/low-stock
2025-08-30 18:22:09.246 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/categories
2025-08-30 18:22:09.246 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/products/expiring?daysAhead=30
2025-08-30 18:22:09.248 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notification-preferences
2025-08-30 18:22:09.248 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/users
2025-08-30 18:22:09.248 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:22:09.251 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.251 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.252 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products?page=0&size=1&sortBy=name&sortDirection=ASC
2025-08-30 18:22:09.252 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products/expiring?daysAhead=30
2025-08-30 18:22:09.252 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products/low-stock
2025-08-30 18:22:09.253 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.255 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.255 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.255 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notification-preferences
2025-08-30 18:22:09.255 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/users
2025-08-30 18:22:09.256 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationPreferenceController.getMyPreferences(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationPreferenceController]
2025-08-30 18:22:09.256 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.UserController.getAllUsers(); target is of class [com.medicorex.controller.UserController]
2025-08-30 18:22:09.256 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.257 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationPreferenceController.getMyPreferences(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationPreferenceController]
2025-08-30 18:22:09.257 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:22:09.257 [http-nio-8080-exec-1] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:22:09.257 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.UserController.getAllUsers(); target is of class [com.medicorex.controller.UserController]
2025-08-30 18:22:09.257 [http-nio-8080-exec-1] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:22:09.257 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.258 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products/low-stock
2025-08-30 18:22:09.258 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.258 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products/expiring?daysAhead=30
2025-08-30 18:22:09.258 [http-nio-8080-exec-3] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getLowStockProducts(); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:22:09.260 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
2025-08-30 18:22:09.261 [http-nio-8080-exec-3] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getLowStockProducts(); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:22:09.261 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        np1_0.id,
        np1_0.category_preferences,
        np1_0.created_at,
        np1_0.created_by,
        np1_0.desktop_notifications,
        np1_0.digest_enabled,
        np1_0.digest_time,
        np1_0.email_enabled,
        np1_0.escalation_contact,
        np1_0.escalation_enabled,
        np1_0.frequency_settings,
        np1_0.in_app_enabled,
        np1_0.last_digest_sent,
        np1_0.priority_threshold,
        np1_0.quiet_hours,
        np1_0.sms_enabled,
        np1_0.sound_enabled,
        np1_0.updated_at,
        np1_0.updated_by,
        np1_0.user_id 
    from
        notification_preferences np1_0 
    where
        np1_0.user_id=?
2025-08-30 18:22:09.262 [http-nio-8080-exec-4] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getExpiringProducts(int); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:22:09.263 [http-nio-8080-exec-4] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getExpiringProducts(int); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:22:09.263 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:22:09.264 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:22:09.264 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:22:09.265 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products?page=0&size=1&sortBy=name&sortDirection=ASC
2025-08-30 18:22:09.265 [http-nio-8080-exec-6] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:22:09.265 [http-nio-8080-exec-6] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:22:09.265 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:09.265 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:09.267 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/categories
2025-08-30 18:22:09.268 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:09.268 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:09.269 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:09.269 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:09.269 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.name 
    limit
        ?, ?
2025-08-30 18:22:09.270 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:09.270 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:09.270 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:09.270 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:09.270 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:09.271 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notification-preferences
2025-08-30 18:22:09.271 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/users
2025-08-30 18:22:09.272 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0
2025-08-30 18:22:09.275 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.275 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.275 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.277 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:22:09.280 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notification-preferences
2025-08-30 18:22:09.280 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/users
2025-08-30 18:22:09.280 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products/expiring?daysAhead=30
2025-08-30 18:22:09.280 [http-nio-8080-exec-10] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationPreferenceController.getMyPreferences(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationPreferenceController]
2025-08-30 18:22:09.280 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products?page=0&size=1&sortBy=name&sortDirection=ASC
2025-08-30 18:22:09.280 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/categories
2025-08-30 18:22:09.280 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.UserController.getAllUsers(); target is of class [com.medicorex.controller.UserController]
2025-08-30 18:22:09.280 [http-nio-8080-exec-10] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationPreferenceController.getMyPreferences(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationPreferenceController]
2025-08-30 18:22:09.280 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.UserController.getAllUsers(); target is of class [com.medicorex.controller.UserController]
2025-08-30 18:22:09.280 [http-nio-8080-exec-8] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.CategoryController.getAllCategories(); target is of class [com.medicorex.controller.CategoryController]
2025-08-30 18:22:09.281 [http-nio-8080-exec-8] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.CategoryController.getAllCategories(); target is of class [com.medicorex.controller.CategoryController]
2025-08-30 18:22:09.281 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.281 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
2025-08-30 18:22:09.281 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.281 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0
2025-08-30 18:22:09.283 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.283 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.283 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        np1_0.id,
        np1_0.category_preferences,
        np1_0.created_at,
        np1_0.created_by,
        np1_0.desktop_notifications,
        np1_0.digest_enabled,
        np1_0.digest_time,
        np1_0.email_enabled,
        np1_0.escalation_contact,
        np1_0.escalation_enabled,
        np1_0.frequency_settings,
        np1_0.in_app_enabled,
        np1_0.last_digest_sent,
        np1_0.priority_threshold,
        np1_0.quiet_hours,
        np1_0.sms_enabled,
        np1_0.sound_enabled,
        np1_0.updated_at,
        np1_0.updated_by,
        np1_0.user_id 
    from
        notification_preferences np1_0 
    where
        np1_0.user_id=?
2025-08-30 18:22:09.295 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:22:09.297 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:22:09.298 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products/low-stock
2025-08-30 18:22:09.299 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:22:09.299 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products/expiring?daysAhead=30
2025-08-30 18:22:09.299 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:22:09.299 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:22:09.300 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products?page=0&size=1&sortBy=name&sortDirection=ASC
2025-08-30 18:22:09.300 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:22:09.300 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getExpiringProducts(int); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:22:09.300 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getExpiringProducts(int); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:22:09.300 [http-nio-8080-exec-1] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:22:09.300 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.300 [http-nio-8080-exec-1] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:22:09.301 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:22:09.301 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:22:09.301 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.name 
    limit
        ?, ?
2025-08-30 18:22:09.302 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:09.302 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:22:09.302 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:22:09.302 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:09.302 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:09.302 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:22:09.302 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:09.302 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.303 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:22:09.303 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:09.303 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0
2025-08-30 18:22:09.303 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:09.303 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:22:09.307 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products/low-stock
2025-08-30 18:22:09.307 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getLowStockProducts(); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:22:09.308 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getLowStockProducts(); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:22:09.308 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/categories
2025-08-30 18:22:09.308 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:22:09.310 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:09.312 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:09.312 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.313 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:09.314 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:09.314 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:09.316 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/categories
2025-08-30 18:22:09.316 [http-nio-8080-exec-4] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.CategoryController.getAllCategories(); target is of class [com.medicorex.controller.CategoryController]
2025-08-30 18:22:09.316 [http-nio-8080-exec-4] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.CategoryController.getAllCategories(); target is of class [com.medicorex.controller.CategoryController]
2025-08-30 18:22:09.316 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /ws/info?t=1756558329315
2025-08-30 18:22:09.317 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-30 18:22:09.317 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0
2025-08-30 18:22:09.319 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /ws/info?t=1756558329315
2025-08-30 18:22:09.319 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:22:09.321 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:22:09.322 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:22:09.323 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:22:09.324 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:22:09.325 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:22:09.325 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:22:09.326 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:22:09.372 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /ws/062/2et3pd0v/websocket
2025-08-30 18:22:09.373 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-30 18:22:09.374 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /ws/062/2et3pd0v/websocket
2025-08-30 18:22:09.399 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/expiry/summary
2025-08-30 18:22:09.399 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/expiry/calendar/range?startDate=2025-08-24&endDate=2025-08-30
2025-08-30 18:22:09.399 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/expiry/summary
2025-08-30 18:22:09.399 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/expiry/calendar/range?startDate=2025-08-24&endDate=2025-08-30
2025-08-30 18:22:09.401 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/expiry/summary
2025-08-30 18:22:09.402 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/expiry/calendar/range?startDate=2025-08-24&endDate=2025-08-30
2025-08-30 18:22:09.404 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.408 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/expiry/summary
2025-08-30 18:22:09.408 [http-nio-8080-exec-1] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpirySummaryController.getExpirySummary(); target is of class [com.medicorex.controller.ExpirySummaryController]
2025-08-30 18:22:09.408 [http-nio-8080-exec-1] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpirySummaryController.getExpirySummary(); target is of class [com.medicorex.controller.ExpirySummaryController]
2025-08-30 18:22:09.411 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0
2025-08-30 18:22:09.415 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0
2025-08-30 18:22:09.417 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.417 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0
2025-08-30 18:22:09.418 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0
2025-08-30 18:22:09.420 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    join
        expiry_alert_configs c1_0 
            on c1_0.id=ea1_0.config_id 
    where
        ea1_0.status=? 
        and c1_0.severity=?
2025-08-30 18:22:09.422 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/expiry/calendar/range?startDate=2025-08-24&endDate=2025-08-30
2025-08-30 18:22:09.422 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    join
        expiry_alert_configs c1_0 
            on c1_0.id=ea1_0.config_id 
    where
        ea1_0.status=? 
        and c1_0.severity=?
2025-08-30 18:22:09.424 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    join
        expiry_alert_configs c1_0 
            on c1_0.id=ea1_0.config_id 
    where
        ea1_0.status=? 
        and c1_0.severity=?
2025-08-30 18:22:09.424 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.425 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryCalendarController.getRangeCalendar(java.time.LocalDate,java.time.LocalDate); target is of class [com.medicorex.controller.ExpiryCalendarController]
2025-08-30 18:22:09.425 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryCalendarController.getRangeCalendar(java.time.LocalDate,java.time.LocalDate); target is of class [com.medicorex.controller.ExpiryCalendarController]
2025-08-30 18:22:09.425 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0
2025-08-30 18:22:09.425 [http-nio-8080-exec-2] INFO  com.medicorex.controller.ExpiryCalendarController - Fetching calendar data from 2025-08-24 to 2025-08-30
2025-08-30 18:22:09.426 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.429 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.429 [http-nio-8080-exec-9] INFO  com.medicorex.config.WebSocketConfig - WebSocket authenticated for user: admin
2025-08-30 18:22:09.429 [http-nio-8080-exec-9] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - WebSocket connection request from user: admin with session: 2et3pd0v
2025-08-30 18:22:09.430 [clientOutboundChannel-99] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - WebSocket connected successfully - User: admin, Session: 2et3pd0v
2025-08-30 18:22:09.430 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.431 [http-nio-8080-exec-2] INFO  com.medicorex.service.expiry.ExpiryCalendarService - Fetching calendar data for request: ExpiryCalendarRequestDTO(month=null, startDate=2025-08-24, endDate=2025-08-30, viewType=MONTH, daysAhead=30, includeResolved=false, includeQuarantined=true, categoryId=null, severity=null, eventType=null, groupByDate=true)
2025-08-30 18:22:09.431 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.432 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.433 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.433 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0 
    where
        pb1_0.expiry_date between ? and ? 
        and pb1_0.status in ('ACTIVE', 'QUARANTINED') 
    order by
        pb1_0.expiry_date
2025-08-30 18:22:09.434 [clientOutboundChannel-99] INFO  com.medicorex.websocket.service.WebSocketNotificationService - User connected via WebSocket: admin
2025-08-30 18:22:09.436 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.436 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.437 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.437 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.438 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ea1_0.id,
        ea1_0.acknowledged_at,
        ea1_0.acknowledged_by,
        ea1_0.alert_date,
        ea1_0.batch_id,
        ea1_0.batch_number,
        ea1_0.config_id,
        ea1_0.created_at,
        ea1_0.expiry_date,
        ea1_0.notes,
        ea1_0.product_id,
        ea1_0.quantity_affected,
        ea1_0.status,
        ea1_0.updated_at 
    from
        expiry_alerts ea1_0 
    join
        expiry_alert_configs c1_0 
            on c1_0.id=ea1_0.config_id 
    where
        ea1_0.expiry_date between ? and ? 
    order by
        ea1_0.expiry_date,
        c1_0.severity
2025-08-30 18:22:09.438 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.439 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.440 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        qr1_0.id,
        qr1_0.batch_id,
        qr1_0.created_at,
        qr1_0.disposal_certificate,
        qr1_0.disposal_date,
        qr1_0.disposal_method,
        qr1_0.estimated_loss,
        qr1_0.notes,
        qr1_0.product_id,
        qr1_0.quantity_quarantined,
        qr1_0.quarantine_date,
        qr1_0.quarantined_by,
        qr1_0.reason,
        qr1_0.return_date,
        qr1_0.return_reference,
        qr1_0.review_date,
        qr1_0.reviewed_by,
        qr1_0.status,
        qr1_0.updated_at 
    from
        quarantine_records qr1_0 
    where
        qr1_0.quarantine_date between ? and ?
2025-08-30 18:22:09.441 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0
2025-08-30 18:22:09.442 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.442 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0
2025-08-30 18:22:09.443 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0 
    where
        pb1_0.id=?
2025-08-30 18:22:09.444 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0
2025-08-30 18:22:09.448 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    where
        ea1_0.status=?
2025-08-30 18:22:09.449 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:22:09.449 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/expiry/calendar/range?startDate=2025-08-24&endDate=2025-08-30
2025-08-30 18:22:09.450 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    where
        ea1_0.status=?
2025-08-30 18:22:09.451 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    where
        ea1_0.status=?
2025-08-30 18:22:09.452 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        quarantine_records qr1_0
2025-08-30 18:22:09.452 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.453 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.453 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(qr1_0.id) 
    from
        quarantine_records qr1_0 
    where
        qr1_0.status=?
2025-08-30 18:22:09.454 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ecl1_0.id,
        ecl1_0.alerts_generated,
        ecl1_0.check_date,
        ecl1_0.created_at,
        ecl1_0.created_by,
        ecl1_0.end_time,
        ecl1_0.error_message,
        ecl1_0.execution_time_ms,
        ecl1_0.products_checked,
        ecl1_0.start_time,
        ecl1_0.status 
    from
        expiry_check_logs ecl1_0 
    order by
        ecl1_0.check_date desc 
    limit
        ?
2025-08-30 18:22:09.456 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:22:09.456 [http-nio-8080-exec-4] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:22:09.456 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/expiry/calendar/range?startDate=2025-08-24&endDate=2025-08-30
2025-08-30 18:22:09.456 [http-nio-8080-exec-4] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:22:09.457 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.457 [http-nio-8080-exec-6] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryCalendarController.getRangeCalendar(java.time.LocalDate,java.time.LocalDate); target is of class [com.medicorex.controller.ExpiryCalendarController]
2025-08-30 18:22:09.457 [http-nio-8080-exec-6] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryCalendarController.getRangeCalendar(java.time.LocalDate,java.time.LocalDate); target is of class [com.medicorex.controller.ExpiryCalendarController]
2025-08-30 18:22:09.457 [http-nio-8080-exec-6] INFO  com.medicorex.controller.ExpiryCalendarController - Fetching calendar data from 2025-08-24 to 2025-08-30
2025-08-30 18:22:09.459 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:22:09.459 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ecl1_0.id,
        ecl1_0.alerts_generated,
        ecl1_0.check_date,
        ecl1_0.created_at,
        ecl1_0.created_by,
        ecl1_0.end_time,
        ecl1_0.error_message,
        ecl1_0.execution_time_ms,
        ecl1_0.products_checked,
        ecl1_0.start_time,
        ecl1_0.status 
    from
        expiry_check_logs ecl1_0 
    order by
        ecl1_0.check_date desc 
    limit
        ?
2025-08-30 18:22:09.463 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0
2025-08-30 18:22:09.464 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0
2025-08-30 18:22:09.464 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:22:09.466 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    where
        ea1_0.status=?
2025-08-30 18:22:09.467 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    where
        ea1_0.status=?
2025-08-30 18:22:09.468 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.472 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:22:09.472 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:22:09.473 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:22:09.473 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.473 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/expiry/summary
2025-08-30 18:22:09.475 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:22:09.476 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:09.482 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/expiry/summary
2025-08-30 18:22:09.482 [http-nio-8080-exec-10] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpirySummaryController.getExpirySummary(); target is of class [com.medicorex.controller.ExpirySummaryController]
2025-08-30 18:22:09.483 [http-nio-8080-exec-10] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpirySummaryController.getExpirySummary(); target is of class [com.medicorex.controller.ExpirySummaryController]
2025-08-30 18:22:09.484 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0
2025-08-30 18:22:09.487 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0
2025-08-30 18:22:09.488 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0
2025-08-30 18:22:09.489 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0
2025-08-30 18:22:09.490 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    join
        expiry_alert_configs c1_0 
            on c1_0.id=ea1_0.config_id 
    where
        ea1_0.status=? 
        and c1_0.severity=?
2025-08-30 18:22:09.491 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    join
        expiry_alert_configs c1_0 
            on c1_0.id=ea1_0.config_id 
    where
        ea1_0.status=? 
        and c1_0.severity=?
2025-08-30 18:22:09.492 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    join
        expiry_alert_configs c1_0 
            on c1_0.id=ea1_0.config_id 
    where
        ea1_0.status=? 
        and c1_0.severity=?
2025-08-30 18:22:09.494 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0
2025-08-30 18:22:09.496 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.497 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.498 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.499 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.499 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.500 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.501 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.502 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.502 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.503 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.503 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:09.504 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0
2025-08-30 18:22:09.505 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0
2025-08-30 18:22:09.506 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0
2025-08-30 18:22:09.507 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    where
        ea1_0.status=?
2025-08-30 18:22:09.508 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    where
        ea1_0.status=?
2025-08-30 18:22:09.509 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    where
        ea1_0.status=?
2025-08-30 18:22:09.510 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        quarantine_records qr1_0
2025-08-30 18:22:09.512 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(qr1_0.id) 
    from
        quarantine_records qr1_0 
    where
        qr1_0.status=?
2025-08-30 18:22:09.513 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ecl1_0.id,
        ecl1_0.alerts_generated,
        ecl1_0.check_date,
        ecl1_0.created_at,
        ecl1_0.created_by,
        ecl1_0.end_time,
        ecl1_0.error_message,
        ecl1_0.execution_time_ms,
        ecl1_0.products_checked,
        ecl1_0.start_time,
        ecl1_0.status 
    from
        expiry_check_logs ecl1_0 
    order by
        ecl1_0.check_date desc 
    limit
        ?
2025-08-30 18:22:09.514 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ecl1_0.id,
        ecl1_0.alerts_generated,
        ecl1_0.check_date,
        ecl1_0.created_at,
        ecl1_0.created_by,
        ecl1_0.end_time,
        ecl1_0.error_message,
        ecl1_0.execution_time_ms,
        ecl1_0.products_checked,
        ecl1_0.start_time,
        ecl1_0.status 
    from
        expiry_check_logs ecl1_0 
    order by
        ecl1_0.check_date desc 
    limit
        ?
2025-08-30 18:22:09.515 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0
2025-08-30 18:22:09.516 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0
2025-08-30 18:22:09.517 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    where
        ea1_0.status=?
2025-08-30 18:22:09.518 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    where
        ea1_0.status=?
2025-08-30 18:22:12.029 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /ws/info?t=1756558332028
2025-08-30 18:22:12.029 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-30 18:22:12.030 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /ws/info?t=1756558332028
2025-08-30 18:22:12.034 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /ws/179/fueocwtj/websocket
2025-08-30 18:22:12.034 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-30 18:22:12.035 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /ws/179/fueocwtj/websocket
2025-08-30 18:22:12.040 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:12.042 [http-nio-8080-exec-9] INFO  com.medicorex.config.WebSocketConfig - WebSocket authenticated for user: admin
2025-08-30 18:22:12.042 [http-nio-8080-exec-9] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - WebSocket connection request from user: admin with session: fueocwtj
2025-08-30 18:22:12.045 [clientOutboundChannel-100] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - WebSocket connected successfully - User: admin, Session: fueocwtj
2025-08-30 18:22:12.045 [clientOutboundChannel-100] INFO  com.medicorex.websocket.service.WebSocketNotificationService - User connected via WebSocket: admin
2025-08-30 18:22:22.507 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/expiry/calendar/month/2025/8
2025-08-30 18:22:22.509 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/expiry/calendar/month/2025/8
2025-08-30 18:22:22.511 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/expiry/calendar/month/2025/8
2025-08-30 18:22:22.515 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:22.522 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/expiry/calendar/month/2025/8
2025-08-30 18:22:22.523 [http-nio-8080-exec-4] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryCalendarController.getMonthCalendar(int,int); target is of class [com.medicorex.controller.ExpiryCalendarController]
2025-08-30 18:22:22.523 [http-nio-8080-exec-4] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryCalendarController.getMonthCalendar(int,int); target is of class [com.medicorex.controller.ExpiryCalendarController]
2025-08-30 18:22:22.523 [http-nio-8080-exec-4] INFO  com.medicorex.controller.ExpiryCalendarController - Fetching calendar data for 2025/8
2025-08-30 18:22:22.526 [http-nio-8080-exec-4] INFO  com.medicorex.service.expiry.ExpiryCalendarService - Fetching calendar data for request: ExpiryCalendarRequestDTO(month=2025-08, startDate=null, endDate=null, viewType=MONTH, daysAhead=30, includeResolved=false, includeQuarantined=true, categoryId=null, severity=null, eventType=null, groupByDate=true)
2025-08-30 18:22:22.528 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0 
    where
        pb1_0.expiry_date between ? and ? 
        and pb1_0.status in ('ACTIVE', 'QUARANTINED') 
    order by
        pb1_0.expiry_date
2025-08-30 18:22:22.530 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:22.531 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:22.532 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:22.533 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:22.534 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:22.535 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:22.552 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ea1_0.id,
        ea1_0.acknowledged_at,
        ea1_0.acknowledged_by,
        ea1_0.alert_date,
        ea1_0.batch_id,
        ea1_0.batch_number,
        ea1_0.config_id,
        ea1_0.created_at,
        ea1_0.expiry_date,
        ea1_0.notes,
        ea1_0.product_id,
        ea1_0.quantity_affected,
        ea1_0.status,
        ea1_0.updated_at 
    from
        expiry_alerts ea1_0 
    join
        expiry_alert_configs c1_0 
            on c1_0.id=ea1_0.config_id 
    where
        ea1_0.expiry_date between ? and ? 
    order by
        ea1_0.expiry_date,
        c1_0.severity
2025-08-30 18:22:22.555 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        eac1_0.id,
        eac1_0.active,
        eac1_0.color_code,
        eac1_0.created_at,
        eac1_0.days_before_expiry,
        eac1_0.description,
        eac1_0.notify_roles,
        eac1_0.severity,
        eac1_0.sort_order,
        eac1_0.tier_name,
        eac1_0.updated_at 
    from
        expiry_alert_configs eac1_0 
    where
        eac1_0.id=?
2025-08-30 18:22:22.556 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:22.557 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        eac1_0.id,
        eac1_0.active,
        eac1_0.color_code,
        eac1_0.created_at,
        eac1_0.days_before_expiry,
        eac1_0.description,
        eac1_0.notify_roles,
        eac1_0.severity,
        eac1_0.sort_order,
        eac1_0.tier_name,
        eac1_0.updated_at 
    from
        expiry_alert_configs eac1_0 
    where
        eac1_0.id=?
2025-08-30 18:22:22.559 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:22.562 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        eac1_0.id,
        eac1_0.active,
        eac1_0.color_code,
        eac1_0.created_at,
        eac1_0.days_before_expiry,
        eac1_0.description,
        eac1_0.notify_roles,
        eac1_0.severity,
        eac1_0.sort_order,
        eac1_0.tier_name,
        eac1_0.updated_at 
    from
        expiry_alert_configs eac1_0 
    where
        eac1_0.id=?
2025-08-30 18:22:22.564 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        qr1_0.id,
        qr1_0.batch_id,
        qr1_0.created_at,
        qr1_0.disposal_certificate,
        qr1_0.disposal_date,
        qr1_0.disposal_method,
        qr1_0.estimated_loss,
        qr1_0.notes,
        qr1_0.product_id,
        qr1_0.quantity_quarantined,
        qr1_0.quarantine_date,
        qr1_0.quarantined_by,
        qr1_0.reason,
        qr1_0.return_date,
        qr1_0.return_reference,
        qr1_0.review_date,
        qr1_0.reviewed_by,
        qr1_0.status,
        qr1_0.updated_at 
    from
        quarantine_records qr1_0 
    where
        qr1_0.quarantine_date between ? and ?
2025-08-30 18:22:22.566 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:22.567 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0 
    where
        pb1_0.id=?
2025-08-30 18:22:22.568 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:22.568 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0 
    where
        pb1_0.id=?
2025-08-30 18:22:22.569 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:22.570 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:22.571 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0 
    where
        pb1_0.id=?
2025-08-30 18:22:22.571 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0 
    where
        pb1_0.id=?
2025-08-30 18:22:22.572 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:22.573 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0 
    where
        pb1_0.id=?
2025-08-30 18:22:22.574 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    where
        p1_0.id=?
2025-08-30 18:22:22.574 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        pb1_0.id,
        pb1_0.batch_number,
        pb1_0.cost_per_unit,
        pb1_0.created_at,
        pb1_0.expiry_date,
        pb1_0.initial_quantity,
        pb1_0.manufacture_date,
        pb1_0.notes,
        pb1_0.product_id,
        pb1_0.quantity,
        pb1_0.status,
        pb1_0.supplier_reference,
        pb1_0.updated_at 
    from
        product_batches pb1_0 
    where
        pb1_0.id=?
2025-08-30 18:22:22.582 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/expiry/calendar/month/2025/8
2025-08-30 18:22:22.585 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:22.592 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/expiry/calendar/month/2025/8
2025-08-30 18:22:22.593 [http-nio-8080-exec-1] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryCalendarController.getMonthCalendar(int,int); target is of class [com.medicorex.controller.ExpiryCalendarController]
2025-08-30 18:22:22.593 [http-nio-8080-exec-1] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryCalendarController.getMonthCalendar(int,int); target is of class [com.medicorex.controller.ExpiryCalendarController]
2025-08-30 18:22:22.593 [http-nio-8080-exec-1] INFO  com.medicorex.controller.ExpiryCalendarController - Fetching calendar data for 2025/8
2025-08-30 18:22:28.497 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/expiry/calendar/range?startDate=2025-08-24&endDate=2025-08-30
2025-08-30 18:22:28.499 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/expiry/calendar/range?startDate=2025-08-24&endDate=2025-08-30
2025-08-30 18:22:28.502 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:28.506 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/expiry/calendar/range?startDate=2025-08-24&endDate=2025-08-30
2025-08-30 18:22:28.508 [http-nio-8080-exec-10] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryCalendarController.getRangeCalendar(java.time.LocalDate,java.time.LocalDate); target is of class [com.medicorex.controller.ExpiryCalendarController]
2025-08-30 18:22:28.508 [http-nio-8080-exec-10] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryCalendarController.getRangeCalendar(java.time.LocalDate,java.time.LocalDate); target is of class [com.medicorex.controller.ExpiryCalendarController]
2025-08-30 18:22:28.508 [http-nio-8080-exec-10] INFO  com.medicorex.controller.ExpiryCalendarController - Fetching calendar data from 2025-08-24 to 2025-08-30
2025-08-30 18:22:29.118 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/expiry/calendar/month/2025/8
2025-08-30 18:22:29.121 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/expiry/calendar/month/2025/8
2025-08-30 18:22:29.124 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:29.131 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/expiry/calendar/month/2025/8
2025-08-30 18:22:29.132 [http-nio-8080-exec-8] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryCalendarController.getMonthCalendar(int,int); target is of class [com.medicorex.controller.ExpiryCalendarController]
2025-08-30 18:22:29.133 [http-nio-8080-exec-8] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryCalendarController.getMonthCalendar(int,int); target is of class [com.medicorex.controller.ExpiryCalendarController]
2025-08-30 18:22:29.133 [http-nio-8080-exec-8] INFO  com.medicorex.controller.ExpiryCalendarController - Fetching calendar data for 2025/8
2025-08-30 18:22:29.818 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/expiry/calendar/month/2025/8
2025-08-30 18:22:29.821 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:29.828 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/expiry/calendar/month/2025/8
2025-08-30 18:22:29.828 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryCalendarController.getMonthCalendar(int,int); target is of class [com.medicorex.controller.ExpiryCalendarController]
2025-08-30 18:22:29.829 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryCalendarController.getMonthCalendar(int,int); target is of class [com.medicorex.controller.ExpiryCalendarController]
2025-08-30 18:22:29.829 [http-nio-8080-exec-9] INFO  com.medicorex.controller.ExpiryCalendarController - Fetching calendar data for 2025/8
2025-08-30 18:22:35.372 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/expiry/monitoring/dashboard
2025-08-30 18:22:35.373 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/expiry/monitoring/dashboard
2025-08-30 18:22:35.373 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/expiry/monitoring/history
2025-08-30 18:22:35.374 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/expiry/monitoring/history
2025-08-30 18:22:35.376 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/expiry/monitoring/dashboard
2025-08-30 18:22:35.379 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:35.380 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/expiry/monitoring/history
2025-08-30 18:22:35.384 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/expiry/monitoring/dashboard
2025-08-30 18:22:35.385 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:35.386 [http-nio-8080-exec-1] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryMonitoringController.getDashboardStats(); target is of class [com.medicorex.controller.ExpiryMonitoringController]
2025-08-30 18:22:35.388 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/expiry/monitoring/history
2025-08-30 18:22:35.388 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryMonitoringController.getCheckHistory(); target is of class [com.medicorex.controller.ExpiryMonitoringController]
2025-08-30 18:22:35.389 [http-nio-8080-exec-1] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryMonitoringController.getDashboardStats(); target is of class [com.medicorex.controller.ExpiryMonitoringController]
2025-08-30 18:22:35.389 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryMonitoringController.getCheckHistory(); target is of class [com.medicorex.controller.ExpiryMonitoringController]
2025-08-30 18:22:35.392 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ecl1_0.id,
        ecl1_0.alerts_generated,
        ecl1_0.check_date,
        ecl1_0.created_at,
        ecl1_0.created_by,
        ecl1_0.end_time,
        ecl1_0.error_message,
        ecl1_0.execution_time_ms,
        ecl1_0.products_checked,
        ecl1_0.start_time,
        ecl1_0.status 
    from
        expiry_check_logs ecl1_0 
    order by
        ecl1_0.check_date desc 
    limit
        ?
2025-08-30 18:22:35.392 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ecl1_0.id,
        ecl1_0.alerts_generated,
        ecl1_0.check_date,
        ecl1_0.created_at,
        ecl1_0.created_by,
        ecl1_0.end_time,
        ecl1_0.error_message,
        ecl1_0.execution_time_ms,
        ecl1_0.products_checked,
        ecl1_0.start_time,
        ecl1_0.status 
    from
        expiry_check_logs ecl1_0 
    order by
        ecl1_0.check_date desc 
    limit
        ?
2025-08-30 18:22:35.400 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ecl1_0.id,
        ecl1_0.alerts_generated,
        ecl1_0.check_date,
        ecl1_0.created_at,
        ecl1_0.created_by,
        ecl1_0.end_time,
        ecl1_0.error_message,
        ecl1_0.execution_time_ms,
        ecl1_0.products_checked,
        ecl1_0.start_time,
        ecl1_0.status 
    from
        expiry_check_logs ecl1_0 
    where
        ecl1_0.check_date=? 
    order by
        ecl1_0.start_time desc
2025-08-30 18:22:35.403 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/expiry/monitoring/history
2025-08-30 18:22:35.406 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:35.406 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/expiry/monitoring/dashboard
2025-08-30 18:22:35.410 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:35.411 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/expiry/monitoring/history
2025-08-30 18:22:35.411 [http-nio-8080-exec-10] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryMonitoringController.getCheckHistory(); target is of class [com.medicorex.controller.ExpiryMonitoringController]
2025-08-30 18:22:35.411 [http-nio-8080-exec-10] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryMonitoringController.getCheckHistory(); target is of class [com.medicorex.controller.ExpiryMonitoringController]
2025-08-30 18:22:35.412 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ecl1_0.id,
        ecl1_0.alerts_generated,
        ecl1_0.check_date,
        ecl1_0.created_at,
        ecl1_0.created_by,
        ecl1_0.end_time,
        ecl1_0.error_message,
        ecl1_0.execution_time_ms,
        ecl1_0.products_checked,
        ecl1_0.start_time,
        ecl1_0.status 
    from
        expiry_check_logs ecl1_0 
    order by
        ecl1_0.check_date desc 
    limit
        ?
2025-08-30 18:22:35.413 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/expiry/monitoring/dashboard
2025-08-30 18:22:35.415 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryMonitoringController.getDashboardStats(); target is of class [com.medicorex.controller.ExpiryMonitoringController]
2025-08-30 18:22:35.415 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryMonitoringController.getDashboardStats(); target is of class [com.medicorex.controller.ExpiryMonitoringController]
2025-08-30 18:22:35.416 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ecl1_0.id,
        ecl1_0.alerts_generated,
        ecl1_0.check_date,
        ecl1_0.created_at,
        ecl1_0.created_by,
        ecl1_0.end_time,
        ecl1_0.error_message,
        ecl1_0.execution_time_ms,
        ecl1_0.products_checked,
        ecl1_0.start_time,
        ecl1_0.status 
    from
        expiry_check_logs ecl1_0 
    order by
        ecl1_0.check_date desc 
    limit
        ?
2025-08-30 18:22:35.418 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ecl1_0.id,
        ecl1_0.alerts_generated,
        ecl1_0.check_date,
        ecl1_0.created_at,
        ecl1_0.created_by,
        ecl1_0.end_time,
        ecl1_0.error_message,
        ecl1_0.execution_time_ms,
        ecl1_0.products_checked,
        ecl1_0.start_time,
        ecl1_0.status 
    from
        expiry_check_logs ecl1_0 
    where
        ecl1_0.check_date=? 
    order by
        ecl1_0.start_time desc
2025-08-30 18:22:35.425 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/expiry/monitoring/dashboard
2025-08-30 18:22:35.429 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:35.433 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/expiry/monitoring/dashboard
2025-08-30 18:22:35.434 [http-nio-8080-exec-8] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryMonitoringController.getDashboardStats(); target is of class [com.medicorex.controller.ExpiryMonitoringController]
2025-08-30 18:22:35.434 [http-nio-8080-exec-8] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryMonitoringController.getDashboardStats(); target is of class [com.medicorex.controller.ExpiryMonitoringController]
2025-08-30 18:22:35.436 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ecl1_0.id,
        ecl1_0.alerts_generated,
        ecl1_0.check_date,
        ecl1_0.created_at,
        ecl1_0.created_by,
        ecl1_0.end_time,
        ecl1_0.error_message,
        ecl1_0.execution_time_ms,
        ecl1_0.products_checked,
        ecl1_0.start_time,
        ecl1_0.status 
    from
        expiry_check_logs ecl1_0 
    order by
        ecl1_0.check_date desc 
    limit
        ?
2025-08-30 18:22:35.439 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ecl1_0.id,
        ecl1_0.alerts_generated,
        ecl1_0.check_date,
        ecl1_0.created_at,
        ecl1_0.created_by,
        ecl1_0.end_time,
        ecl1_0.error_message,
        ecl1_0.execution_time_ms,
        ecl1_0.products_checked,
        ecl1_0.start_time,
        ecl1_0.status 
    from
        expiry_check_logs ecl1_0 
    where
        ecl1_0.check_date=? 
    order by
        ecl1_0.start_time desc
2025-08-30 18:22:35.443 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/expiry/monitoring/dashboard
2025-08-30 18:22:35.447 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:35.450 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/expiry/monitoring/dashboard
2025-08-30 18:22:35.450 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryMonitoringController.getDashboardStats(); target is of class [com.medicorex.controller.ExpiryMonitoringController]
2025-08-30 18:22:35.450 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryMonitoringController.getDashboardStats(); target is of class [com.medicorex.controller.ExpiryMonitoringController]
2025-08-30 18:22:35.451 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ecl1_0.id,
        ecl1_0.alerts_generated,
        ecl1_0.check_date,
        ecl1_0.created_at,
        ecl1_0.created_by,
        ecl1_0.end_time,
        ecl1_0.error_message,
        ecl1_0.execution_time_ms,
        ecl1_0.products_checked,
        ecl1_0.start_time,
        ecl1_0.status 
    from
        expiry_check_logs ecl1_0 
    order by
        ecl1_0.check_date desc 
    limit
        ?
2025-08-30 18:22:35.454 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ecl1_0.id,
        ecl1_0.alerts_generated,
        ecl1_0.check_date,
        ecl1_0.created_at,
        ecl1_0.created_by,
        ecl1_0.end_time,
        ecl1_0.error_message,
        ecl1_0.execution_time_ms,
        ecl1_0.products_checked,
        ecl1_0.start_time,
        ecl1_0.status 
    from
        expiry_check_logs ecl1_0 
    where
        ecl1_0.check_date=? 
    order by
        ecl1_0.start_time desc
2025-08-30 18:22:36.536 [MessageBroker-3] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[2 current WS(2)-HttpStream(0)-HttpPoll(0), 77 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(77)-CONNECTED(77)-DISCONNECT(67)], stompBrokerRelay[null], inboundChannel[pool size = 16, active threads = 0, queued tasks = 0, completed tasks = 3249], outboundChannel[pool size = 11, active threads = 0, queued tasks = 0, completed tasks = 281], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 3, completed tasks = 1152]
2025-08-30 18:22:39.153 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:22:39.156 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:22:39.159 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:39.163 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:22:39.163 [http-nio-8080-exec-3] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:22:39.163 [http-nio-8080-exec-3] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:22:39.163 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:39.165 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:22:45.996 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/expiry/monitoring/dashboard
2025-08-30 18:22:45.997 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/expiry/monitoring/dashboard
2025-08-30 18:22:46.002 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/expiry/monitoring/dashboard
2025-08-30 18:22:46.006 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:46.011 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/expiry/monitoring/dashboard
2025-08-30 18:22:46.011 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryMonitoringController.getDashboardStats(); target is of class [com.medicorex.controller.ExpiryMonitoringController]
2025-08-30 18:22:46.011 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryMonitoringController.getDashboardStats(); target is of class [com.medicorex.controller.ExpiryMonitoringController]
2025-08-30 18:22:46.012 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ecl1_0.id,
        ecl1_0.alerts_generated,
        ecl1_0.check_date,
        ecl1_0.created_at,
        ecl1_0.created_by,
        ecl1_0.end_time,
        ecl1_0.error_message,
        ecl1_0.execution_time_ms,
        ecl1_0.products_checked,
        ecl1_0.start_time,
        ecl1_0.status 
    from
        expiry_check_logs ecl1_0 
    order by
        ecl1_0.check_date desc 
    limit
        ?
2025-08-30 18:22:46.014 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ecl1_0.id,
        ecl1_0.alerts_generated,
        ecl1_0.check_date,
        ecl1_0.created_at,
        ecl1_0.created_by,
        ecl1_0.end_time,
        ecl1_0.error_message,
        ecl1_0.execution_time_ms,
        ecl1_0.products_checked,
        ecl1_0.start_time,
        ecl1_0.status 
    from
        expiry_check_logs ecl1_0 
    where
        ecl1_0.check_date=? 
    order by
        ecl1_0.start_time desc
2025-08-30 18:22:46.018 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/expiry/monitoring/dashboard
2025-08-30 18:22:46.021 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:46.026 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/expiry/monitoring/dashboard
2025-08-30 18:22:46.028 [http-nio-8080-exec-1] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryMonitoringController.getDashboardStats(); target is of class [com.medicorex.controller.ExpiryMonitoringController]
2025-08-30 18:22:46.028 [http-nio-8080-exec-1] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryMonitoringController.getDashboardStats(); target is of class [com.medicorex.controller.ExpiryMonitoringController]
2025-08-30 18:22:46.029 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ecl1_0.id,
        ecl1_0.alerts_generated,
        ecl1_0.check_date,
        ecl1_0.created_at,
        ecl1_0.created_by,
        ecl1_0.end_time,
        ecl1_0.error_message,
        ecl1_0.execution_time_ms,
        ecl1_0.products_checked,
        ecl1_0.start_time,
        ecl1_0.status 
    from
        expiry_check_logs ecl1_0 
    order by
        ecl1_0.check_date desc 
    limit
        ?
2025-08-30 18:22:46.032 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ecl1_0.id,
        ecl1_0.alerts_generated,
        ecl1_0.check_date,
        ecl1_0.created_at,
        ecl1_0.created_by,
        ecl1_0.end_time,
        ecl1_0.error_message,
        ecl1_0.execution_time_ms,
        ecl1_0.products_checked,
        ecl1_0.start_time,
        ecl1_0.status 
    from
        expiry_check_logs ecl1_0 
    where
        ecl1_0.check_date=? 
    order by
        ecl1_0.start_time desc
2025-08-30 18:22:51.235 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/expiry/configs
2025-08-30 18:22:51.235 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/expiry/configs
2025-08-30 18:22:51.237 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/expiry/configs
2025-08-30 18:22:51.241 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:51.244 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/expiry/configs
2025-08-30 18:22:51.247 [http-nio-8080-exec-8] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryAlertConfigController.getAllConfigurations(); target is of class [com.medicorex.controller.ExpiryAlertConfigController]
2025-08-30 18:22:51.247 [http-nio-8080-exec-8] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryAlertConfigController.getAllConfigurations(); target is of class [com.medicorex.controller.ExpiryAlertConfigController]
2025-08-30 18:22:51.250 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        eac1_0.id,
        eac1_0.active,
        eac1_0.color_code,
        eac1_0.created_at,
        eac1_0.days_before_expiry,
        eac1_0.description,
        eac1_0.notify_roles,
        eac1_0.severity,
        eac1_0.sort_order,
        eac1_0.tier_name,
        eac1_0.updated_at 
    from
        expiry_alert_configs eac1_0
2025-08-30 18:22:51.253 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    where
        ea1_0.status=?
2025-08-30 18:22:51.257 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:22:51.258 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:51.259 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:51.260 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:51.260 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:51.261 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:51.264 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    where
        ea1_0.status=?
2025-08-30 18:22:51.266 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:22:51.267 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    where
        ea1_0.status=?
2025-08-30 18:22:51.268 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:22:51.269 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    where
        ea1_0.status=?
2025-08-30 18:22:51.272 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:22:51.274 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    where
        ea1_0.status=?
2025-08-30 18:22:51.276 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:22:51.277 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    where
        ea1_0.status=?
2025-08-30 18:22:51.279 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:22:51.285 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/expiry/configs
2025-08-30 18:22:51.289 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:22:51.294 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/expiry/configs
2025-08-30 18:22:51.294 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryAlertConfigController.getAllConfigurations(); target is of class [com.medicorex.controller.ExpiryAlertConfigController]
2025-08-30 18:22:51.295 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ExpiryAlertConfigController.getAllConfigurations(); target is of class [com.medicorex.controller.ExpiryAlertConfigController]
2025-08-30 18:22:51.296 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        eac1_0.id,
        eac1_0.active,
        eac1_0.color_code,
        eac1_0.created_at,
        eac1_0.days_before_expiry,
        eac1_0.description,
        eac1_0.notify_roles,
        eac1_0.severity,
        eac1_0.sort_order,
        eac1_0.tier_name,
        eac1_0.updated_at 
    from
        expiry_alert_configs eac1_0
2025-08-30 18:22:51.297 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    where
        ea1_0.status=?
2025-08-30 18:22:51.299 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:22:51.301 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:51.301 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:51.302 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:51.303 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:51.304 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:22:51.306 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    where
        ea1_0.status=?
2025-08-30 18:22:51.307 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:22:51.308 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    where
        ea1_0.status=?
2025-08-30 18:22:51.310 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:22:51.311 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    where
        ea1_0.status=?
2025-08-30 18:22:51.313 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:22:51.314 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    where
        ea1_0.status=?
2025-08-30 18:22:51.316 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:22:51.317 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(ea1_0.id) 
    from
        expiry_alerts ea1_0 
    where
        ea1_0.status=?
2025-08-30 18:22:51.318 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:23:08.041 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/reports/stock-valuation
2025-08-30 18:23:08.042 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/reports/valuation-summary
2025-08-30 18:23:08.042 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/reports/stock-valuation
2025-08-30 18:23:08.042 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/reports/valuation-summary
2025-08-30 18:23:08.045 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/reports/valuation-summary
2025-08-30 18:23:08.045 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/reports/stock-valuation
2025-08-30 18:23:08.048 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:23:08.048 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:23:08.051 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/reports/stock-valuation
2025-08-30 18:23:08.051 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/reports/valuation-summary
2025-08-30 18:23:08.052 [http-nio-8080-exec-10] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ReportController.getStockValuationReport(); target is of class [com.medicorex.controller.ReportController]
2025-08-30 18:23:08.052 [http-nio-8080-exec-1] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ReportController.getValuationSummary(); target is of class [com.medicorex.controller.ReportController]
2025-08-30 18:23:08.053 [http-nio-8080-exec-10] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ReportController.getStockValuationReport(); target is of class [com.medicorex.controller.ReportController]
2025-08-30 18:23:08.053 [http-nio-8080-exec-1] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ReportController.getValuationSummary(); target is of class [com.medicorex.controller.ReportController]
2025-08-30 18:23:08.054 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:23:08.054 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:23:08.055 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:08.055 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:08.056 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:08.056 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:08.057 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:08.057 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:08.057 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:08.057 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:08.057 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:08.058 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:08.066 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/reports/valuation-summary
2025-08-30 18:23:08.070 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:23:08.074 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/reports/valuation-summary
2025-08-30 18:23:08.074 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        categories c1_0
2025-08-30 18:23:08.074 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ReportController.getValuationSummary(); target is of class [com.medicorex.controller.ReportController]
2025-08-30 18:23:08.074 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ReportController.getValuationSummary(); target is of class [com.medicorex.controller.ReportController]
2025-08-30 18:23:08.075 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:23:08.077 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:08.078 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:08.079 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:08.080 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:08.080 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:08.083 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/reports/stock-valuation
2025-08-30 18:23:08.086 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:23:08.090 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/reports/stock-valuation
2025-08-30 18:23:08.090 [http-nio-8080-exec-8] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ReportController.getStockValuationReport(); target is of class [com.medicorex.controller.ReportController]
2025-08-30 18:23:08.091 [http-nio-8080-exec-8] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ReportController.getStockValuationReport(); target is of class [com.medicorex.controller.ReportController]
2025-08-30 18:23:08.092 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:23:08.094 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:08.094 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:08.095 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:08.095 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:08.096 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:08.099 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        categories c1_0
2025-08-30 18:23:09.159 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:23:09.162 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:23:09.166 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:23:09.171 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:23:09.171 [http-nio-8080-exec-4] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:23:09.172 [http-nio-8080-exec-4] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:23:09.172 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:23:09.174 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:23:13.672 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/reports/product-valuation?sortBy=totalValue&sortDirection=DESC
2025-08-30 18:23:13.672 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/reports/product-valuation?sortBy=totalValue&sortDirection=DESC
2025-08-30 18:23:13.674 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/reports/product-valuation?sortBy=totalValue&sortDirection=DESC
2025-08-30 18:23:13.677 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:23:13.681 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/reports/product-valuation?sortBy=totalValue&sortDirection=DESC
2025-08-30 18:23:13.683 [http-nio-8080-exec-10] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ReportController.getProductValuation(java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ReportController]
2025-08-30 18:23:13.683 [http-nio-8080-exec-10] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ReportController.getProductValuation(java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ReportController]
2025-08-30 18:23:13.684 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:23:13.686 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:13.687 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:13.688 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:13.689 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:13.690 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:13.695 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/reports/product-valuation?sortBy=totalValue&sortDirection=DESC
2025-08-30 18:23:13.698 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:23:13.702 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/reports/product-valuation?sortBy=totalValue&sortDirection=DESC
2025-08-30 18:23:13.703 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ReportController.getProductValuation(java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ReportController]
2025-08-30 18:23:13.703 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ReportController.getProductValuation(java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ReportController]
2025-08-30 18:23:13.705 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:23:13.706 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:13.707 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:13.708 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:13.708 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:13.708 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:23:39.158 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:23:39.162 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:23:39.166 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:23:39.171 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:23:39.172 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:23:39.172 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:23:39.172 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:23:39.174 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:24:09.155 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:24:09.159 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:24:09.165 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:24:09.171 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:24:09.172 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:24:09.172 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:24:09.172 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:24:09.174 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:24:17.664 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/users
2025-08-30 18:24:17.665 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/users
2025-08-30 18:24:17.666 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/users
2025-08-30 18:24:17.668 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:24:17.672 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/users
2025-08-30 18:24:17.672 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.UserController.getAllUsers(); target is of class [com.medicorex.controller.UserController]
2025-08-30 18:24:17.672 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.UserController.getAllUsers(); target is of class [com.medicorex.controller.UserController]
2025-08-30 18:24:17.673 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
2025-08-30 18:24:17.676 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/users
2025-08-30 18:24:17.679 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:24:17.683 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/users
2025-08-30 18:24:17.683 [http-nio-8080-exec-8] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.UserController.getAllUsers(); target is of class [com.medicorex.controller.UserController]
2025-08-30 18:24:17.683 [http-nio-8080-exec-8] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.UserController.getAllUsers(); target is of class [com.medicorex.controller.UserController]
2025-08-30 18:24:17.685 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
2025-08-30 18:24:17.867 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /uploads/users/147a8bcd-20d5-421c-a547-8eb5a698dd08.jpg
2025-08-30 18:24:17.867 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-30 18:24:17.869 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /uploads/users/147a8bcd-20d5-421c-a547-8eb5a698dd08.jpg
2025-08-30 18:24:39.163 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:24:39.167 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:24:39.170 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:24:39.176 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:24:39.176 [http-nio-8080-exec-3] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:24:39.176 [http-nio-8080-exec-3] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:24:39.177 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:24:39.179 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:25:09.169 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:25:09.172 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:25:09.176 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:25:09.181 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:25:09.182 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:25:09.182 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:25:09.182 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:25:09.184 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:25:39.157 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:25:39.160 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:25:39.164 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:25:39.170 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:25:39.171 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:25:39.171 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:25:39.171 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:25:39.173 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:26:09.155 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:26:09.158 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:26:09.163 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:26:09.169 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:26:09.169 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:26:09.170 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:26:09.170 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:26:09.173 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:26:39.163 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:26:39.168 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:26:39.173 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:26:39.179 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:26:39.179 [http-nio-8080-exec-3] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:26:39.179 [http-nio-8080-exec-3] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:26:39.180 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:26:39.183 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:27:09.167 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:27:09.171 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:27:09.176 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:27:09.183 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:27:09.183 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:27:09.183 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:27:09.184 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:27:09.187 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:27:39.167 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:27:39.170 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:27:39.175 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:27:39.181 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:27:39.182 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:27:39.182 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:27:39.183 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:27:39.185 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:28:09.155 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:28:09.158 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:28:09.162 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:28:09.169 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:28:09.170 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:28:09.170 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:28:09.171 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:28:09.174 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:28:39.166 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:28:39.170 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:28:39.173 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:28:39.178 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:28:39.178 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:28:39.178 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:28:39.180 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:28:39.182 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:29:09.161 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:29:09.164 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:29:09.169 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:29:09.175 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:29:09.175 [http-nio-8080-exec-3] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:29:09.175 [http-nio-8080-exec-3] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:29:09.176 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:29:09.180 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:29:39.155 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:29:39.158 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:29:39.163 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:29:39.169 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:29:39.170 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:29:39.170 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:29:39.171 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:29:39.174 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:30:09.167 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:30:09.171 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:30:09.176 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:30:09.181 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:30:09.182 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:30:09.182 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:30:09.183 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:30:09.186 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:30:39.167 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:30:39.170 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:30:39.175 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:30:39.182 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:30:39.182 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:30:39.183 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:30:39.184 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:30:39.186 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:31:09.170 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:31:09.174 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:31:09.178 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:31:09.185 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:31:09.185 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:31:09.185 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:31:09.186 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:31:09.189 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:31:39.168 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:31:39.172 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:31:39.177 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:31:39.181 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:31:39.182 [http-nio-8080-exec-3] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:31:39.182 [http-nio-8080-exec-3] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:31:39.182 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:31:39.184 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:32:09.163 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:32:09.167 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:32:09.171 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:32:09.177 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:32:09.178 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:32:09.178 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:32:09.179 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:32:09.182 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:32:39.165 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:32:39.169 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:32:39.171 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:32:39.176 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:32:39.176 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:32:39.177 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:32:39.177 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:32:39.179 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:33:09.168 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:33:09.171 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:33:09.176 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:33:09.183 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:33:09.183 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:33:09.184 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:33:09.184 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:33:09.187 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:33:39.166 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:33:39.169 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:33:39.173 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:33:39.178 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:33:39.178 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:33:39.178 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:33:39.179 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:33:39.180 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:34:09.168 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:34:09.171 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:34:09.176 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:34:09.182 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:34:09.183 [http-nio-8080-exec-3] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:34:09.184 [http-nio-8080-exec-3] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:34:09.185 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:34:09.188 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:34:39.161 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:34:39.164 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:34:39.169 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:34:39.173 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:34:39.174 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:34:39.174 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:34:39.174 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:34:39.176 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:35:09.160 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:35:09.164 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:35:09.168 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:35:09.175 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:35:09.175 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:35:09.176 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:35:09.177 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:35:09.180 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:35:39.167 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:35:39.171 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:35:39.176 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:35:39.182 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:35:39.183 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:35:39.183 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:35:39.184 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:35:39.186 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:36:09.163 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:36:09.166 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:36:09.171 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:36:09.178 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:36:09.179 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:36:09.179 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:36:09.180 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:36:09.182 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:36:39.165 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:36:39.168 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:36:39.172 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:36:39.178 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:36:39.179 [http-nio-8080-exec-3] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:36:39.179 [http-nio-8080-exec-3] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:36:39.180 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:36:39.182 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:37:09.164 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:37:09.168 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:37:09.173 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:37:09.181 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:37:09.182 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:37:09.182 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:37:09.183 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:37:09.186 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:37:39.160 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:37:39.163 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:37:39.167 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:37:39.174 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:37:39.174 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:37:39.175 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:37:39.175 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:37:39.178 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:38:09.168 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:38:09.173 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:38:09.177 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:38:09.184 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:38:09.185 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:38:09.185 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:38:09.186 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:38:09.189 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:38:39.971 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:38:39.975 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:38:39.980 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:38:39.986 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:38:39.987 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:38:39.987 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:38:39.988 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:38:39.991 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:39:09.959 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:39:09.964 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:39:09.967 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:39:09.974 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:39:09.975 [http-nio-8080-exec-3] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:39:09.975 [http-nio-8080-exec-3] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:39:09.976 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:39:09.979 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:39:24.233 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/products?page=0&size=100&sortBy=id&sortDirection=DESC
2025-08-30 18:39:24.234 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/categories
2025-08-30 18:39:24.234 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/products/low-stock
2025-08-30 18:39:24.235 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/products/expiring?daysAhead=30
2025-08-30 18:39:24.235 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/products?page=0&size=1000&sortBy=name&sortDirection=ASC
2025-08-30 18:39:24.235 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/products?page=0&size=100&sortBy=id&sortDirection=DESC
2025-08-30 18:39:24.237 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/products?page=0&size=1000&sortBy=name&sortDirection=ASC
2025-08-30 18:39:24.237 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/products/low-stock
2025-08-30 18:39:24.237 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/products/expiring?daysAhead=30
2025-08-30 18:39:24.238 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/categories
2025-08-30 18:39:24.238 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products?page=0&size=100&sortBy=id&sortDirection=DESC
2025-08-30 18:39:24.239 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/categories
2025-08-30 18:39:24.241 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products/low-stock
2025-08-30 18:39:24.241 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:39:24.241 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:39:24.242 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products/expiring?daysAhead=30
2025-08-30 18:39:24.242 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products?page=0&size=1000&sortBy=name&sortDirection=ASC
2025-08-30 18:39:24.244 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:39:24.244 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:39:24.244 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:39:24.245 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/categories
2025-08-30 18:39:24.245 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products?page=0&size=100&sortBy=id&sortDirection=DESC
2025-08-30 18:39:24.246 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.CategoryController.getAllCategories(); target is of class [com.medicorex.controller.CategoryController]
2025-08-30 18:39:24.246 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.CategoryController.getAllCategories(); target is of class [com.medicorex.controller.CategoryController]
2025-08-30 18:39:24.247 [http-nio-8080-exec-6] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.247 [http-nio-8080-exec-6] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.247 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0
2025-08-30 18:39:24.248 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products?page=0&size=1000&sortBy=name&sortDirection=ASC
2025-08-30 18:39:24.248 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products/low-stock
2025-08-30 18:39:24.248 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products/expiring?daysAhead=30
2025-08-30 18:39:24.248 [http-nio-8080-exec-10] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.248 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.id desc 
    limit
        ?, ?
2025-08-30 18:39:24.248 [http-nio-8080-exec-1] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getLowStockProducts(); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.248 [http-nio-8080-exec-10] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.248 [http-nio-8080-exec-1] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getLowStockProducts(); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.249 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getExpiringProducts(int); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.249 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getExpiringProducts(int); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.249 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:39:24.249 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:39:24.249 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.249 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.name 
    limit
        ?, ?
2025-08-30 18:39:24.249 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:39:24.250 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.250 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.250 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:39:24.250 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.250 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.251 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.251 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.251 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.251 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:39:24.251 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.251 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.252 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.252 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:39:24.252 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.252 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.252 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.253 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.253 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:39:24.253 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.253 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.254 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.254 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.254 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.254 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:39:24.255 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:39:24.258 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products/low-stock
2025-08-30 18:39:24.258 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:39:24.260 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products/expiring?daysAhead=30
2025-08-30 18:39:24.260 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products?page=0&size=1000&sortBy=name&sortDirection=ASC
2025-08-30 18:39:24.261 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:39:24.261 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products?page=0&size=100&sortBy=id&sortDirection=DESC
2025-08-30 18:39:24.263 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/categories
2025-08-30 18:39:24.264 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:39:24.264 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:39:24.264 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:39:24.266 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:39:24.266 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products/low-stock
2025-08-30 18:39:24.266 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getLowStockProducts(); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.266 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getLowStockProducts(); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.267 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products?page=0&size=100&sortBy=id&sortDirection=DESC
2025-08-30 18:39:24.267 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products?page=0&size=1000&sortBy=name&sortDirection=ASC
2025-08-30 18:39:24.267 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products/expiring?daysAhead=30
2025-08-30 18:39:24.267 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:39:24.267 [http-nio-8080-exec-4] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.267 [http-nio-8080-exec-8] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getExpiringProducts(int); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.267 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.267 [http-nio-8080-exec-4] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.267 [http-nio-8080-exec-8] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getExpiringProducts(int); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.267 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.268 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.268 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:39:24.268 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.name 
    limit
        ?, ?
2025-08-30 18:39:24.268 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.id desc 
    limit
        ?, ?
2025-08-30 18:39:24.269 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.269 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.269 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.269 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.269 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/categories
2025-08-30 18:39:24.269 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.269 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.270 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.CategoryController.getAllCategories(); target is of class [com.medicorex.controller.CategoryController]
2025-08-30 18:39:24.270 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.270 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.270 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.270 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.CategoryController.getAllCategories(); target is of class [com.medicorex.controller.CategoryController]
2025-08-30 18:39:24.270 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.270 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.270 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.270 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.270 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0
2025-08-30 18:39:24.271 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.271 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.271 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.271 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.271 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:39:24.272 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.272 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.272 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:39:24.273 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:39:24.275 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:39:24.276 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:39:24.277 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:39:24.279 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:39:24.280 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.id) 
    from
        products p1_0 
    where
        p1_0.category_id=?
2025-08-30 18:39:24.677 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products?page=0&size=100&sortBy=id&sortDirection=DESC
2025-08-30 18:39:24.677 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products/low-stock
2025-08-30 18:39:24.677 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products?page=0&size=1000&sortBy=name&sortDirection=ASC
2025-08-30 18:39:24.677 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/products/expiring?daysAhead=30
2025-08-30 18:39:24.681 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:39:24.681 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:39:24.681 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:39:24.681 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:39:24.685 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products?page=0&size=100&sortBy=id&sortDirection=DESC
2025-08-30 18:39:24.685 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products/low-stock
2025-08-30 18:39:24.685 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products/expiring?daysAhead=30
2025-08-30 18:39:24.686 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/products?page=0&size=1000&sortBy=name&sortDirection=ASC
2025-08-30 18:39:24.686 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getLowStockProducts(); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.686 [http-nio-8080-exec-5] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getLowStockProducts(); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.686 [http-nio-8080-exec-10] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.686 [http-nio-8080-exec-10] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.686 [http-nio-8080-exec-1] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.686 [http-nio-8080-exec-6] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getExpiringProducts(int); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.686 [http-nio-8080-exec-6] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getExpiringProducts(int); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.686 [http-nio-8080-exec-1] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.ProductController.getAllProducts(int,int,java.lang.String,java.lang.String); target is of class [com.medicorex.controller.ProductController]
2025-08-30 18:39:24.687 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:39:24.687 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.name 
    limit
        ?, ?
2025-08-30 18:39:24.687 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0
2025-08-30 18:39:24.688 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.barcode,
        p1_0.batch_number,
        p1_0.category_id,
        p1_0.code,
        p1_0.created_at,
        p1_0.description,
        p1_0.expiry_date,
        p1_0.image_url,
        p1_0.last_stock_check,
        p1_0.last_updated,
        p1_0.manufacturer,
        p1_0.max_stock,
        p1_0.min_stock,
        p1_0.min_stock_level,
        p1_0.name,
        p1_0.qr_code,
        p1_0.quantity,
        p1_0.unit,
        p1_0.unit_price,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.id desc 
    limit
        ?, ?
2025-08-30 18:39:24.688 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.688 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.688 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.688 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.689 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.689 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.689 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.689 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.689 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.689 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.689 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.690 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.690 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.690 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.690 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.690 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.690 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.691 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.691 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:24.691 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.description,
        c1_0.name,
        c1_0.parent_id 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-30 18:39:39.158 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:39:39.161 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:39:39.166 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:39:39.172 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:39:39.173 [http-nio-8080-exec-8] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:39:39.173 [http-nio-8080-exec-8] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:39:39.174 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:39:39.176 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:40:09.156 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:40:09.159 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:40:09.163 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:40:09.169 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:40:09.170 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:40:09.170 [http-nio-8080-exec-2] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:40:09.172 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:40:09.173 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:40:39.160 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:40:39.163 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:40:39.168 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:40:39.174 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:40:39.175 [http-nio-8080-exec-3] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:40:39.175 [http-nio-8080-exec-3] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:40:39.175 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:40:39.177 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:41:09.160 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:41:09.162 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:41:09.167 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:41:09.174 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:41:09.174 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:41:09.175 [http-nio-8080-exec-7] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:41:09.175 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:41:09.178 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:41:39.170 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing OPTIONS /api/notifications/unread-count
2025-08-30 18:41:39.173 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /api/notifications/unread-count
2025-08-30 18:41:39.178 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:41:39.182 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /api/notifications/unread-count
2025-08-30 18:41:39.182 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:41:39.182 [http-nio-8080-exec-9] DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.medicorex.controller.NotificationController.getUnreadCount(org.springframework.security.core.Authentication); target is of class [com.medicorex.controller.NotificationController]
2025-08-30 18:41:39.183 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.full_name,
        u1_0.gender,
        u1_0.last_notification_check,
        u1_0.password,
        u1_0.profile_image_url,
        u1_0.role,
        u1_0.unread_notifications,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-30 18:41:39.184 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(n1_0.id) 
    from
        notifications n1_0 
    where
        n1_0.user_id=? 
        and n1_0.status=?
2025-08-30 18:41:52.925 [http-nio-8080-exec-6] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - WebSocket disconnected - User: admin, Session: fueocwtj, Duration: 1180 seconds
2025-08-30 18:41:52.925 [http-nio-8080-exec-4] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - WebSocket disconnected - User: admin, Session: 2et3pd0v, Duration: 1183 seconds
2025-08-30 18:41:52.925 [http-nio-8080-exec-6] INFO  com.medicorex.websocket.service.WebSocketNotificationService - User disconnected from WebSocket: admin
2025-08-30 18:41:52.925 [http-nio-8080-exec-4] INFO  com.medicorex.websocket.service.WebSocketNotificationService - User disconnected from WebSocket: admin
2025-08-30 18:41:52.925 [http-nio-8080-exec-6] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - User admin has no more active WebSocket sessions
2025-08-30 18:41:52.925 [http-nio-8080-exec-4] INFO  com.medicorex.websocket.handler.NotificationWebSocketHandler - User admin has no more active WebSocket sessions
2025-08-30 18:41:52.925 [http-nio-8080-exec-6] INFO  com.medicorex.config.WebSocketConfig - WebSocket disconnected for user: UsernamePasswordAuthenticationToken [Principal=com.medicorex.security.CustomUserDetails@24545eff, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_HOSPITAL_MANAGER]]
2025-08-30 18:41:52.925 [http-nio-8080-exec-4] INFO  com.medicorex.config.WebSocketConfig - WebSocket disconnected for user: UsernamePasswordAuthenticationToken [Principal=com.medicorex.security.CustomUserDetails@4fea08a7, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_HOSPITAL_MANAGER]]
2025-08-30 18:41:57.959 [SpringApplicationShutdownHook] INFO  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler - Stopping...
2025-08-30 18:41:57.959 [SpringApplicationShutdownHook] INFO  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@3ade8ec6]]
2025-08-30 18:41:57.959 [SpringApplicationShutdownHook] INFO  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler - Stopped.
2025-08-30 18:41:57.974 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 18:41:57.977 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-30 18:41:57.979 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
